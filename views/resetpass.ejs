<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - BrandLogo</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    /* Base styles from your theme for consistency */
    :root {
        --bg-primary: #0a0a0a;
        --bg-secondary: #141414;
        --bg-card: #1a1a1a;
        --bg-input: #2a2a2a;
        --bg-hover: #333333;
        --text-primary: #ffffff;
        --text-secondary: #b3b3b3;
        --text-muted: #666666;
        --accent-primary: #6366f1;
        --accent-hover: #5855eb;
        --success: #10b981;
        --error: #ef4444;
        --border-color: #333333;
        --border-focus: #6366f1;
        --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.4);
        --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        --border-radius: 8px;
        --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: var(--font-family);
        background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
        color: var(--text-primary);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        overflow-x: hidden;
    }

    /* Animated gradient background */
    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: 
            radial-gradient(circle at 15% 85%, rgba(99, 102, 241, 0.1) 0%, transparent 40%),
            radial-gradient(circle at 85% 20%, rgba(139, 92, 246, 0.1) 0%, transparent 40%);
        z-index: -1;
        animation: backgroundShift 12s ease-in-out infinite alternate;
    }

    @keyframes backgroundShift {
        0% { transform: translateX(-10px) translateY(-10px); }
        100% { transform: translateX(10px) translateY(10px); }
    }

    .container {
        width: 100%;
        max-width: 400px;
    }

    .reset-card {
        background: var(--bg-card);
        border: 1px solid var(--border-color);
        border-radius: 16px;
        padding: 40px 32px;
        box-shadow: var(--shadow-xl);
        backdrop-filter: blur(10px);
        animation: slideUp 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
    }

    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(40px) scale(0.98);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* Brand Logo */
    .brand-logo {
        text-align: center;
        margin-bottom: 24px;
    }

    .logo-icon {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 12px;
    }

    .brand-name {
        font-size: 24px;
        font-weight: 700;
        background: linear-gradient(135deg, var(--text-primary), var(--text-secondary));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Header Text */
    .header-text {
        text-align: center;
        margin-bottom: 32px;
    }

    .header-text h1 {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 8px;
        color: var(--text-primary);
    }

    .header-text p {
        color: var(--text-secondary);
        font-size: 14px;
    }

    /* Form Styles */
    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 6px;
        font-weight: 500;
        font-size: 14px;
        color: var(--text-primary);
    }

    .input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

    .input-wrapper input {
        width: 100%;
        padding: 14px 16px 14px 44px;
        background: var(--bg-input);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        color: var(--text-primary);
        font-size: 14px;
        transition: var(--transition);
    }

    .input-wrapper input:focus {
        outline: none;
        border-color: var(--border-focus);
        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    }

    .input-icon {
        position: absolute;
        left: 16px;
        color: var(--text-muted);
    }

    .toggle-password {
        position: absolute;
        right: 16px;
        background: none;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
    }
    
    /* Button */
    .btn-primary {
        width: 100%;
        padding: 14px 24px;
        background: linear-gradient(135deg, var(--accent-primary), var(--accent-hover));
        color: white;
        border: none;
        border-radius: var(--border-radius);
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }
    
    .btn-primary:disabled { 
        opacity: 0.6; 
        cursor: not-allowed;
    }

    .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 10px 15px -3px rgba(99, 102, 241, 0.2);
    }
    
    /* Message styling */
    #message {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
        font-weight: 500;
        min-height: 20px;
        transition: color 0.3s ease;
    }
    
    #message.success {
        color: var(--success);
    }
    
    #message.error {
        color: var(--error);
    }

</style>
</head>
<body>
    <div class="container">
        <div class="reset-card">
            
            <div class="brand-logo">
                <div class="logo-icon">
                    <img src="./images/logo.svg" alt="Brand Logo">
                </div>
                <h1 class="brand-name">Vidyari</h1>
            </div>

            <div class="header-text">
                <h1>Set a New Password</h1>
                <p>Your new password must be different from previous ones.</p>
            </div>

            <form id="resetForm">
                <div class="form-group">
                    <label for="newPassword">New Password</label>
                    <div class="input-wrapper">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" id="newPassword" placeholder="Enter new password" required />
                        <button type="button" class="toggle-password" id="toggleNewPassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm New Password</label>
                    <div class="input-wrapper">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" id="confirmPassword" placeholder="Confirm new password" required />
                        <button type="button" class="toggle-password" id="toggleConfirmPassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <button type="submit" class="btn-primary">Reset Password</button>
            </form>
            <p id="message"></p>
        </div>
    </div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById("resetForm");
        const msg = document.getElementById("message");
        const newPasswordInput = document.getElementById("newPassword");
        const confirmPasswordInput = document.getElementById("confirmPassword");
        const toggleNewPassword = document.getElementById("toggleNewPassword");
        const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
        const submitButton = form.querySelector('button[type="submit"]');

        // Extract token from URL
        const token = window.location.pathname.split("/").pop();

        // Password toggle functionality
        const setupPasswordToggle = (toggleBtn, passwordInput) => {
            toggleBtn.addEventListener("click", () => {
                const type = passwordInput.getAttribute("type") === "password" ? "text" : "password";
                passwordInput.setAttribute("type", type);
                const icon = toggleBtn.querySelector("i");
                icon.classList.toggle("fa-eye");
                icon.classList.toggle("fa-eye-slash");
            });
        };

        setupPasswordToggle(toggleNewPassword, newPasswordInput);
        setupPasswordToggle(toggleConfirmPassword, confirmPasswordInput);

        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            
            submitButton.disabled = true;
            msg.textContent = "";
            msg.className = "";

            const newPassword = newPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            if (newPassword.length < 8) {
                msg.textContent = "Password must be at least 8 characters.";
                msg.className = "error";
                submitButton.disabled = false;
                return;
            }

            if (newPassword !== confirmPassword) {
                msg.textContent = "Passwords do not match.";
                msg.className = "error";
                submitButton.disabled = false;
                return;
            }

            try {
                const res = await fetch(`/auth/reset-password/${token}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ password: newPassword }),
                });

                const data = await res.json();
                if (res.ok) {
                    msg.textContent = data.message;
                    msg.className = "success";
                    setTimeout(() => window.location.href = "/user-login", 2000);
                } else {
                    msg.textContent = data.message || "Something went wrong.";
                    msg.className = "error";
                    submitButton.disabled = false;
                }
            } catch (err) {
                msg.textContent = "Server error. Please try again later.";
                msg.className = "error";
                submitButton.disabled = false;
            }
        });
    });
</script>
</body>
</html>
