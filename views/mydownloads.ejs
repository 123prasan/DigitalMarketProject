<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3321203820490717"
     crossorigin="anonymous"></script>
<%-include("header")%>
<div class="downloads-component-scope-xyz">
    
    <div class="downloads-component__container">
        <div class="downloads-component__card">
            <div class="downloads-component__header">
                <h1 class="downloads-component__title">My Downloads</h1>
            </div>

            <div class="downloads-component__search-bar">
                <i class="fa-solid fa-search downloads-component__search-icon"></i>
                <input type="search" id="downloadsSearchInput" class="downloads-component__search-input"
                    placeholder="Search by filename...">
            </div>

            <div class="downloads-component__filter-bar">
                <div class="downloads-component__filter-group">
                    <label for="fileTypeFilter" class="downloads-component__filter-label">File Type</label>
                    <select id="downloadsFileTypeFilter" class="downloads-component__filter-select">
                        <option value="all">All Types</option>
                    </select>
                </div>
                 <div class="downloads-component__filter-group">
                    <label for="startDateFilter" class="downloads-component__filter-label">Start Date</label>
                    <input type="date" id="downloadsStartDateFilter" class="downloads-component__filter-input">
                </div>
                 <div class="downloads-component__filter-group">
                    <label for="endDateFilter" class="downloads-component__filter-label">End Date</label>
                    <input type="date" id="downloadsEndDateFilter" class="downloads-component__filter-input">
                </div>
            </div>

            <ul class="downloads-component__list" id="downloadsListComponent">
                <%# The content of this list will be rendered by client-side JavaScript %>
            </ul>
        </div>
    </div>

</div>

<style>
    /* --- UNIFIED "RETRO-BRUTALIST" THEME --- */
    .downloads-component-scope-xyz {
        --font-main: 'Montserrat', sans-serif;
        --color-bg: #fff;
        --color-black: #000000;
        --color-primary: #ff66a3; /* Pink */
        --color-secondary: #4ade80; /* Green */
        --color-accent: #ffd60a;   /* Yellow */
        --color-focus: #1ac2ff;   /* Blue */
        --transition-fast: 0.2s ease;

        font-family: var(--font-main);
        background-color: var(--color-accent); /* Use a theme color for the page background */
        color: var(--color-black);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        /* padding: 2rem; */
    }

    .downloads-component-scope-xyz * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .downloads-component-scope-xyz .downloads-component__container {
        width: 100%;
        flex-grow: 1;
        /* display: flex; */
        /* align-items: center;
        justify-content: center; */
    }

    .downloads-component-scope-xyz .downloads-component__card {
        background: var(--color-bg);
        border: 4px solid var(--color-black);
        box-shadow: 12px 12px 0 var(--color-black);
        padding: 40px;
        width: 100%;
        max-width:100%;
        display: flex;
        flex-direction: column;
        gap: 24px;
        height:100%;
        /* max-height: calc(100vh - 4rem); */
    }

    .downloads-component-scope-xyz .downloads-component__header {
        padding-bottom: 24px;
        border-bottom: 4px solid var(--color-black);
        flex-shrink: 0;
    }

    .downloads-component-scope-xyz .downloads-component__title {
        font-size: 2rem;
        font-weight: 900;
        text-transform: uppercase;
    }

    .downloads-component-scope-xyz .downloads-component__search-bar {
        position: relative;
        width: 100%;
        flex-shrink: 0;
    }
    .downloads-component-scope-xyz .downloads-component__search-icon {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--color-black);
    }
    .downloads-component-scope-xyz .downloads-component__search-input {
        width: 100%;
        padding: 14px 16px 14px 44px;
        background-color: var(--color-bg);
        border: 3px solid var(--color-black);
        box-shadow: 4px 4px 0 var(--color-black);
        color: var(--color-black);
        font-size: 16px;
        font-weight: 600;
        outline: none;
        transition: var(--transition-fast);
    }
    .downloads-component-scope-xyz .downloads-component__search-input:focus {
        border-color: var(--color-primary);
        box-shadow: 0 0 0 var(--color-black);
    }

    .downloads-component-scope-xyz .downloads-component__filter-bar {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 16px;
        flex-shrink: 0;
    }
    .downloads-component-scope-xyz .downloads-component__filter-group {
        display: flex;
        flex-direction: column;
    }
    .downloads-component-scope-xyz .downloads-component__filter-label {
        font-size: 12px;
        color: #555;
        margin-bottom: 8px;
        font-weight: 700;
        text-transform: uppercase;
    }
    .downloads-component-scope-xyz .downloads-component__filter-select, 
    .downloads-component-scope-xyz .downloads-component__filter-input {
        padding: 10px;
        background-color: var(--color-bg);
        border: 3px solid var(--color-black);
        color: var(--color-black);
        font-size: 14px;
        font-weight: 600;
    }

    .downloads-component-scope-xyz .downloads-component__list {
        list-style: none;
        overflow-y: auto;
        padding-right: 12px;
        flex-grow: 1;
    }
    .downloads-component-scope-xyz .downloads-component__list::-webkit-scrollbar { width: 8px; }
    .downloads-component-scope-xyz .downloads-component__list::-webkit-scrollbar-track { background: #eee; }
    .downloads-component-scope-xyz .downloads-component__list::-webkit-scrollbar-thumb { background: var(--color-black); }

    .downloads-component-scope-xyz .downloads-component__list-message {
        text-align: center;
        padding: 60px 20px;
        color: var(--color-black);
        font-weight: 700;
    }
    .downloads-component-scope-xyz .downloads-component__list-message-icon {
        font-size: 48px;
        margin-bottom: 16px;
        display: block;
    }

    .downloads-component-scope-xyz .downloads-component__item {
        display: flex;
        align-items: center;
        padding: 16px 8px;
        transition: background-color var(--transition-fast);
        gap: 16px;
        border-bottom: 2px solid #ddd;
    }
    .downloads-component-scope-xyz .downloads-component__item:hover {
        background-color: #f0f0f0;
    }

    .downloads-component-scope-xyz .downloads-component__file-icon-wrapper {
        flex-shrink: 0;
        width: 48px; height: 48px;
        background-color: var(--color-primary);
        border: 3px solid var(--color-black);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 22px;
        color: var(--color-black);
    }
    .downloads-component-scope-xyz .downloads-component__file-info { flex-grow: 1; min-width: 0; }
    .downloads-component-scope-xyz .downloads-component__file-name {
        font-weight: 700;
        color: var(--color-black);
        margin-bottom: 4px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 16px;
    }
    .downloads-component-scope-xyz .downloads-component__download-date { font-size: 13px; color: #555; }

    .downloads-component-scope-xyz .downloads-component__redownload-btn {
        flex-shrink: 0;
        padding: 8px 16px;
        background-color: var(--color-accent);
        color: var(--color-black);
        border: 3px solid var(--color-black);
        box-shadow: 3px 3px 0 var(--color-black);
        font-size: 14px;
        font-weight: 700;
        cursor: pointer;
        transition: var(--transition-fast);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .downloads-component-scope-xyz .downloads-component__redownload-btn:hover {
        background-color: var(--color-focus);
        transform: translate(1.5px, 1.5px);
        box-shadow: 1.5px 1.5px 0 var(--color-black);
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- DOM ELEMENTS ---
        const downloadsList = document.getElementById('downloadsListComponent');
        const searchInput = document.getElementById('downloadsSearchInput');
        const fileTypeFilter = document.getElementById('downloadsFileTypeFilter');
        const startDateFilter = document.getElementById('downloadsStartDateFilter');
        const endDateFilter = document.getElementById('downloadsEndDateFilter');

        // --- DATA HYDRATION ---
        const allDownloads = <%-JSON.stringify(downloads)%>;

        // --- STATE ---
        const filters = {
            query: '',
            fileType: 'all',
            startDate: null,
            endDate: null
        };

        // --- UTILITY FUNCTIONS ---
        const getFileIconClass = (filename = '') => {
            const extension = filename.split('.').pop().toLowerCase();
            switch (extension) {
                case 'pdf': return 'fa-solid fa-file-pdf';
                case 'zip': case 'rar': return 'fa-solid fa-file-zipper';
                case 'xlsx': case 'csv': return 'fa-solid fa-file-excel';
                case 'ppt': case 'pptx': return 'fa-solid fa-file-powerpoint';
                case 'doc': case 'docx': return 'fa-solid fa-file-word';
                case 'jpg': case 'jpeg': case 'png': case 'gif': return 'fa-solid fa-file-image';
                default: return 'fa-solid fa-file';
            }
        };

        const debounce = (func, delay) => {
            let timeout;
            return (...args) => {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), delay);
            };
        };

        // --- RENDER FUNCTION ---
        const renderDownloads = (files) => {
            downloadsList.innerHTML = '';
            if (files.length === 0) {
                downloadsList.innerHTML = `<li class="downloads-component__list-message"><i class="fa-solid fa-box-open downloads-component__list-message-icon"></i>No files match your filters.</li>`;
                return;
            }

            const fragment = document.createDocumentFragment();
            files.forEach((file, index) => {
                const item = document.createElement('li');
                // **UPDATED** to use unique class
                item.className = 'downloads-component__item';
                item.style.animationDelay = `${index * 50}ms`;
                
                const downloadDate = new Date(file.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });

                // **UPDATED** to use unique classes
                item.innerHTML = `
                    <div class="downloads-component__file-icon-wrapper"><i class="${getFileIconClass(file.filename)}"></i></div>
                    <div class="downloads-component__file-info">
                        <div class="downloads-component__file-name" title="${file.filename}">${file.filename}</div>
                        <div class="downloads-component__download-date">Downloaded on: ${downloadDate}</div>
                    </div>
                    <a href="/download/?file_id=${file.fileId}" class="downloads-component__redownload-btn">
                        <i class="fa-solid fa-download downloads-component__redownload-btn-icon"></i>
                        <span class="downloads-component__redownload-btn-text">Redownload</span>
                    </a>
                `;
                fragment.appendChild(item);
            });
            downloadsList.appendChild(fragment);

            setTimeout(() => {
                const items = downloadsList.querySelectorAll('.downloads-component__item');
                items.forEach(item => item.classList.add('animate-in'));
            }, 10);
        };

        // --- FILTERING LOGIC ---
        const applyFiltersAndRender = () => {
            let filteredFiles = allDownloads;

            if (filters.query) {
                filteredFiles = filteredFiles.filter(file =>
                    file.filename.toLowerCase().includes(filters.query)
                );
            }

            if (filters.fileType !== 'all') {
                 filteredFiles = filteredFiles.filter(file => {
                    const extension = file.filename.split('.').pop().toLowerCase();
                    return extension === filters.fileType;
                });
            }

            if (filters.startDate) {
                filteredFiles = filteredFiles.filter(file => new Date(file.createdAt) >= filters.startDate);
            }
            if (filters.endDate) {
                const inclusiveEndDate = new Date(filters.endDate);
                inclusiveEndDate.setDate(inclusiveEndDate.getDate() + 1);
                filteredFiles = filteredFiles.filter(file => new Date(file.createdAt) < inclusiveEndDate);
            }
            
            renderDownloads(filteredFiles);
        };

        // --- DYNAMIC FILTER POPULATION ---
        const populateFileTypeFilter = () => {
            const fileTypes = [...new Set(allDownloads.map(file => file.filename.split('.').pop().toLowerCase()))];
            fileTypes.sort().forEach(type => {
                 if(type) {
                    const option = document.createElement('option');
                    option.value = type;
                    option.textContent = `.${type.toUpperCase()}`;
                    fileTypeFilter.appendChild(option);
                 }
            });
        };
        
        // --- EVENT LISTENERS ---
        searchInput.addEventListener('input', debounce((e) => {
            filters.query = e.target.value.toLowerCase();
            applyFiltersAndRender();
        }, 300));
        
        fileTypeFilter.addEventListener('change', (e) => {
            filters.fileType = e.target.value;
            applyFiltersAndRender();
        });

        startDateFilter.addEventListener('change', (e) => {
            filters.startDate = e.target.value ? new Date(e.target.value) : null;
            applyFiltersAndRender();
        });

        endDateFilter.addEventListener('change', (e) => {
            filters.endDate = e.target.value ? new Date(e.target.value) : null;
            applyFiltersAndRender();
        });

        // --- INITIAL LOAD ---
        if (allDownloads && allDownloads.length > 0) {
            populateFileTypeFilter();
            renderDownloads(allDownloads);
        } else {
            downloadsList.innerHTML = `<li class="downloads-component__list-message"><i class="fa-solid fa-cloud-download downloads-component__list-message-icon"></i>You have not downloaded any files yet.</li>`;
        }
    });
</script>
<%-include("footer")%>
