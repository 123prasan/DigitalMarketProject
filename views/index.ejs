<%-include("header")%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  
    <title>Vidyari: Premium Study Docs, Notes & Resources | Vidyari</title>
<meta name="title" content="Vidyari: Buy Premium Study Docs, Notes & Resources | Engineering, NEET, JEE & CBSE">
<meta name="description" content="Search, find, and download premium study docs and notes for engineering, nursing, competitive exams (NEET, JEE, KCET), and school boards (CBSE, ICSE). Optimized resources to help students in Bengaluru and across India succeed.">
<meta name="keywords" content="premium study docs, buy notes, online study resources, engineering notes, bsc nursing docs, NEET study material, JEE resources, KCET notes, SSLC guide, CBSE study material, ICSE notes, UGC NET, educational resources, Bengaluru, India, instant download, online learning, vidyari, study marketplace, pdf notes download">
<meta name="author" content="Vidyari">

<!-- Indexing and Robots -->
<meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1">
<meta name="googlebot" content="index, follow">
<meta name="bingbot" content="index, follow">
<link rel="canonical" href="https://vidyari.com/" />

<!-- General Meta -->
<meta name="language" content="English">
<meta name="distribution" content="global">
<meta name="rating" content="general">
<meta name="copyright" content="Vidyari">
<meta name="classification" content="Education, Study Material, Online Learning, Courses">
<meta name="category" content="Education">
<meta name="audience" content="Students, Learners, Professionals">
<meta name="coverage" content="Worldwide">
<meta name="revisit-after" content="3 days">
<meta name="abstract" content="Vidyari is a digital marketplace for premium study documents, notes, and courses for students across India.">
<meta name="application-name" content="Vidyari">
<meta name="apple-mobile-web-app-title" content="Vidyari">

<!-- Open Graph (Facebook & LinkedIn) -->
<meta property="og:type" content="website">
<meta property="og:url" content="https://vidyari.com/">
<meta property="og:title" content="Vidyari: Buy Premium Study Docs, Notes & Resources">
<meta property="og:description" content="Find and download the best study docs and notes for engineering, competitive exams, and more to ace your studies.">
<meta property="og:image" content="https://vidyari.com/images/logo-1200x630.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="og:site_name" content="Vidyari">
<meta property="og:locale" content="en_IN">

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:url" content="https://vidyari.com/">
<meta name="twitter:title" content="Vidyari: Buy Premium Study Docs, Notes & Resources">
<meta name="twitter:description" content="Search and download high-quality study documents for all subjects and exams. Your key to academic success.">
<meta name="twitter:image" content="https://vidyari.com/images/logo-1200x630.png">

<!-- Icons -->
<link rel="icon" href="/images/favicon.ico" sizes="any">
<link rel="icon" href="/images/logo.svg" type="image/svg+xml">
<link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
<meta name="theme-color" content="#111827">

<!-- Performance -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link rel="dns-prefetch" href="//www.google-analytics.com">

<!-- Fonts & CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Sora:wght@400;600;700;800&display=swap" rel="stylesheet">
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3321203820490717"
     crossorigin="anonymous"></script>
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "Vidyari",
  "url": "https://vidyari.com/",
  "publisher": {
    "@type": "Organization",
    "name": "Vidyari",
    "logo": {
      "@type": "ImageObject",
      "url": "/images/logo.svg"
    }
  }
}
</script>

<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [{
    "@type": "ListItem",
    "position": 1,
    "name": "Home",
    "item": "https://vidyari.com/"
  }]
}
</script>



<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": [{
    "@type": "Question",
    "name": "What is Vidyari?",
    "acceptedAnswer": {
      "@type": "Answer",
      "text": "Vidyari is an online platform where students can buy and sell premium study documents, notes, and resources for various subjects and competitive exams."
    }
  }, {
    "@type": "Question",
    "name": "How can I download study notes?",
    "acceptedAnswer": {
      "@type": "Answer",
      "text": "Simply search for your required document, add it to your cart, complete the secure payment process, and the file will be available for instant download."
    }
  }]
}
</script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700;900&display=swap" rel="stylesheet">

<style>
    /* --- UNIFIED "RETRO-BRUTALIST" THEME --- */
    body {
        --font-main: 'Montserrat', sans-serif;
        --color-bg: #fff;
        --color-black: #000000;
        --color-primary: #ff66a3; /* Pink */
        --color-secondary: #4ade80; /* Green */
        --color-accent: #ffd60a;   /* Yellow */
        --color-focus: #1ac2ff;   /* Blue */
        
        font-family: var(--font-main); 
        background-color: var(--color-bg);
        position: relative;
        overflow-x: hidden;
    }

    body::before {
        content: '';
        position: fixed;
        top: 0; left: 0; right: 0; bottom: 0;
        background: linear-gradient(135deg, var(--color-primary), var(--color-secondary), var(--color-accent), var(--color-focus));
        background-size: 400% 400%;
        animation: gradient-animation 25s ease infinite;
        z-index: -1;
        opacity: 0.15;
    }
    @keyframes gradient-animation {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    .page-wrapper {
        /* padding: 1rem; */
    }

    /* --- HERO & SEARCH BAR --- */
    .hero-section {
        padding: 2rem 1rem; text-align: center; background: var(--color-bg);
        border: 4px solid var(--color-black); box-shadow: 12px 12px 0 var(--color-black);
        margin-bottom: 3rem;
        position: relative;
    }
    .hero-title { 
        font-weight: 900; font-size: clamp(2.5rem, 5vw, 4rem); 
        text-transform: uppercase; color: var(--color-black);
    }
    .search-wrapper { position: relative; }
    .search-bar {
        margin-top: 2rem; border: 3px solid var(--color-black);
        box-shadow: 6px 6px 0 var(--color-black); display: flex;
        align-items: center; background: #fff;
        padding-left: 1rem;
    }
    .search-bar .search-icon {
        color: var(--color-black);
        font-size: 1.2rem;
    }
    .search-bar input {
        border: none; outline: none; flex: 1; font-size: 1.1rem;
        padding: 1rem; background: transparent; color: var(--color-black);
        font-weight: 600;
    }
    .filter-btn {
        margin-top: 1.5rem; border: 3px solid #000000; box-shadow: 3px 3px 0 #000000;
        font-weight: 700; background: var(--color-secondary);
        transition: all 0.3s ease; cursor: pointer; padding: 10px 20px;
    }
    .filter-btn:hover { background: var(--color-focus); }
    
    /* --- SEARCH SUGGESTIONS --- */
    .search-suggestions {
        position: absolute; top: calc(100% + 10px); left: 0; right: 0;
        background-color: #fff; border: 3px solid var(--color-black);
        box-shadow: 6px 6px 0 var(--color-black); z-index: 1000;
        text-align: left; display: none;
    }
    .suggestion-item {
        display: flex; align-items: center; gap: 15px;
        padding: 10px 15px; text-decoration: none;
        color: var(--color-black); font-weight: 600;
        border-bottom: 3px solid var(--color-black);
    }
    .suggestion-item:last-child { border-bottom: none; }
    .suggestion-item:hover { background-color: var(--color-accent); }
    .suggestion-item strong { color: var(--color-primary); }
    .suggestion-thumb {
        width: 45px; height: 45px; object-fit: cover;
        border: 2px solid var(--color-black); flex-shrink: 0;
    }
    .suggestion-info { display: flex; flex-direction: column; overflow: hidden; }
    .suggestion-title { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
    .suggestion-user { font-size: 0.8rem; font-weight: 600; color: #666; }
    
    /* --- BRUTALIST CONTAINER --- */
    .brutalist-container-wrapper {
        padding: 0;
    }
    @media (min-width: 768px) {
        .brutalist-container-wrapper {
            padding: 0 1rem;
        }
    }
    .brutalist-container {
        padding: 20px; background: #fff; border: 6px solid var(--color-black);
        box-shadow: 12px 12px 0 var(--color-black);
    }
    @media (min-width: 768px) {
        .brutalist-container { padding: 40px; }
    }
    .container-title {
        font-size: clamp(1.5rem, 4vw, 2rem); font-weight: 900;
        color: var(--color-black); text-transform: uppercase;
        margin-bottom: 25px;
    }

    /* --- FILE CARD STYLES --- */
    .file-card-wrapper { transition: all 0.3s ease; }
    .file-card-wrapper:hover { transform: translate(-6px, -6px); }
    .file-card {
        width: 100%; height: 100%; background: var(--color-primary);
        border: 3px solid var(--color-black); box-shadow: 8px 8px 0 var(--color-black);
        overflow: hidden; display: flex; flex-direction: column;
    }
    .file-card .head {
        font-size: 0.8rem; font-weight: 900; background: #ffffff;
        padding: 8px 12px; color: #000000; border-bottom: 3px solid #000000;
        white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
    }
    .file-card .card-img {
        aspect-ratio: 16 / 10; background-color: #eee; overflow: hidden;
    }
    .file-card .card-img img { width: 100%; height: 100%; object-fit: cover; }
    .file-card .content {
        padding: 10px; font-weight: 600; flex-grow: 1;
        display: flex; flex-direction: column; gap: 6px;
    }
    .file-card .meta-item {
        display: flex; align-items: center; gap: 5px; font-size: 0.75rem;
    }
    .file-card .button-container { padding: 0 10px 10px; margin-top: auto; }
    .file-card .button {
        padding: 8px 10px; border: 3px solid var(--color-black);
        box-shadow: 3px 3px 0 var(--color-black); font-weight: 750;
        background: var(--color-accent); font-size: 0.9rem;
        width: 100%; text-decoration: none; color: var(--color-black);
        display: block; text-align: center; transition: all 0.3s ease;
    }
    .file-card .button:hover {
        transform: translate(1.5px, 1.5px); box-shadow: 1.5px 1.5px 0 var(--color-black);
        background: var(--color-focus);
    }
    
    /* --- PAGINATION & MODAL STYLES --- */
    .pagination-controls {
        display: flex; justify-content: space-between; align-items: center;
        margin-top: 2rem; color: #000;
    }
    .pagination-btn {
        border: 3px solid #000; background: #000; color: #fff;
        padding: 8px 20px; font-size: 16px; font-weight: bold;
        text-transform: uppercase; cursor: pointer;
    }
    .pagination-btn:disabled { background: #ccc; border-color: #ccc; cursor: not-allowed; }
    .modal-content {
        border: 3px solid var(--color-black); border-radius: 0;
        box-shadow: 8px 8px 0 var(--color-black); background: var(--color-bg);
    }
    .modal-header, .modal-footer { border-color: var(--color-black); }
    .form-label { font-weight: 700; }
    .form-select, .form-range, .form-check-input {
        border: 2px solid var(--color-black) !important;
        box-shadow: none !important;
    }
    .form-check-input:checked {
        background-color: var(--color-primary);
    }
</style>
</head>
<body>
    <div class="page-wrapper">
      <main>
        <section class="hero-section">
          <div class="container">
            <h1 class="hero-title">Find Your Edge</h1>
            <div class="search-wrapper mx-auto" style="max-width: 600px;">
              <div class="search-bar">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="searchInput" placeholder="Search for notes, subjects, exams..." autocomplete="off" />
              </div>
              <div class="search-suggestions" id="searchSuggestions"></div>
            </div>
            <button class="filter-btn" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="fas fa-filter me-2"></i>Filter & Sort
            </button>
          </div>
        </section>

        <div class="container-fluid my-5 brutalist-container-wrapper"> 
            <div class="brutalist-container">
                <section>
                    <h2 id="grid-main-title" class="container-title">Explore Notes</h2>
                    <p id="resultsCounter" class="mb-4" style="color: #000 !important; font-weight: 600;"></p>
                    <div class="row gx-0 gx-md-3  gy-md-4" id="fileCards">
</div>
                    <div id="loadingIndicator" class="text-center py-5 my-5" style="display: none;">
                        <div class="spinner-border" style="width: 3rem; height: 3rem; color: var(--color-primary);" role="status"></div>
                    </div>
                    <div id="noResultsBlock" class="text-center py-5 my-5" style="display: none;">
                        <h4 class="mt-4 fw-bold" style="color:#000;">No Notes Found</h4>
                        <p style="color:#333;">Try a different keyword or adjust your filters.</p>
                    </div>
                    <div id="pagination-controls" class="pagination-controls" style="display: none;">
                        <button id="prevButton" class="pagination-btn">Previous</button>
                        <span id="pageIndicator" class="fw-bold"></span>
                        <button id="nextButton" class="pagination-btn">Next</button>
                    </div>
                </section>
            </div>
        </div>
      </main>
    </div>

    <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title fw-bold" id="filterModalLabel">Filter & Sort</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-4">
                <label for="sortBy" class="form-label">Sort by</label>
                <select class="form-select" id="sortBy">
                    <option value="popular">Popularity</option><option value="newest">Newest</option>
                    <option value="price-asc">Price: Low to High</option><option value="price-desc">Price: High to Low</option>
                </select>
            </div>
            <div class="mb-4">
                <label class="form-label">Pricing</label>
                <div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="priceAll" value="all" checked><label class="form-check-label" for="priceAll">All</label></div>
                <div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="pricePaid" value="paid"><label class="form-check-label" for="pricePaid">Paid</label></div>
                <div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="priceFree" value="free"><label class="form-check-label" for="priceFree">Free</label></div>
            </div>
            <div class="mb-4">
                <label for="priceRange" class="form-label">Price Range (Up to ₹<span id="priceRangeValue">1000</span>)</label>
                <input type="range" class="form-range" id="priceRange" min="0" max="1000" step="10">
            </div>
            <div class="mb-4">
                <label class="form-label">Category</label>
                <div id="categoryFilters">
                    </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" id="clearFiltersBtn">Clear</button>
            <button type="button" class="btn btn-primary" id="applyFiltersBtn">Apply Filters</button>
          </div>
        </div>
      </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let allFilesData = [], allCategories = [];
            let currentPage = 1, filesPerPage = 30, searchDebounceTimeout;
            let currentFilters = {
                search: '',
                sort: 'popular',
                price: 'all',
                maxPrice: 1000,
                categories: []
            };

            const searchInput = document.getElementById('searchInput');
            const searchSuggestions = document.getElementById('searchSuggestions');
            const fileCardsContainer = document.getElementById('fileCards');
            const resultsCounter = document.getElementById('resultsCounter');
            const noResultsBlock = document.getElementById('noResultsBlock');
            const paginationControls = document.getElementById('pagination-controls');
            const prevButton = document.getElementById('prevButton');
            const nextButton = document.getElementById('nextButton');
            const pageIndicator = document.getElementById('pageIndicator');
            const loadingIndicator = document.getElementById('loadingIndicator');
            const applyFiltersBtn = document.getElementById('applyFiltersBtn');
            const clearFiltersBtn = document.getElementById('clearFiltersBtn');
            const filterModal = new bootstrap.Modal(document.getElementById('filterModal'));
            const priceRange = document.getElementById('priceRange');
            const priceRangeValue = document.getElementById('priceRangeValue');
            const sortBy = document.getElementById('sortBy');
            
            const slugifyJS = (text) => {
                if (!text) return 'file';
                return text.toString().toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-');
            };

            const createFileCardHTML = (file) => {
                const wrapper = document.createElement('div');
                wrapper.className = 'col-lg-3 col-md-4 col-sm-6 col-6';
                const fileUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;
                const priceText = file.price > 0 ? `Buy for ₹${file.price}` : `Download`;
                wrapper.innerHTML = `
                    <div class="file-card-wrapper">
                        <div class="file-card">
                            <div class="head" title="${file.filename}">${file.filename}</div>
                            <div class="card-img"><img src="${file.previewUrl}" alt="${file.filename}" loading="lazy"></div>
                            <div class="content">
                                <span class="meta-item" title="Creator"><i class="fas fa-user"></i> ${file.user || 'Admin'}</span>
                                <span class="meta-item" title="Downloads"><i class="fas fa-download"></i> ${(file.downloadCount || 0).toLocaleString()}</span>
                            </div>
                            <div class="button-container">
                                <a href="${fileUrl}" class="button">${priceText}</a>
                            </div>
                        </div>
                    </div>`;
                return wrapper;
            };

            const updateSuggestions = () => {
                const query = searchInput.value.toLowerCase().trim();
                if (query.length < 2) {
                    searchSuggestions.style.display = 'none';
                    return;
                }
                const searchResults = [];
                allFilesData.forEach(file => {
                    let score = 0;
                    const filename = (file.filename || '').toLowerCase();
                    const description = (file.filedescription || '').toLowerCase();
                    const category = (file.category || '').toLowerCase();
                    const user = (file.user || '').toLowerCase();
                    if (filename.includes(query)) score += 10;
                    if (category.includes(query)) score += 5;
                    if (description.includes(query)) score += 2;
                    if (user.includes(query)) score += 1;
                    if (score > 0) searchResults.push({ file, score });
                });
                searchResults.sort((a, b) => b.score - a.score);
                const top5 = searchResults.slice(0, 5);
                if (top5.length > 0) {
                    searchSuggestions.innerHTML = top5.map(res => {
                        const file = res.file;
                        const fileUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;
                        const title = file.filename.replace(new RegExp(query, 'gi'), (match) => `<strong>${match}</strong>`);
                        return `<a href="${fileUrl}" class="suggestion-item"><img src="${file.previewUrl}" class="suggestion-thumb" alt="${file.filename}"><div class="suggestion-info"><span class="suggestion-title">${title}</span><span class="suggestion-user">by ${file.user || 'Admin'}</span></div></a>`;
                    }).join('');
                    searchSuggestions.style.display = 'block';
                } else {
                    searchSuggestions.style.display = 'none';
                }
            };
            
            const fetchAndRenderFiles = async (isInitialLoad = false) => {
                loadingIndicator.style.display = 'block';
                fileCardsContainer.innerHTML = '';
                noResultsBlock.style.display = 'none';
                paginationControls.style.display = 'none';
                const params = new URLSearchParams({
                    page: currentPage, 
                    limit: filesPerPage,
                    search: currentFilters.search, 
                    sort: currentFilters.sort,
                    price: currentFilters.price,
                    maxPrice: currentFilters.maxPrice,
                });
                currentFilters.categories.forEach(cat => params.append('category', cat));
                try {
                    const response = await fetch(`/files?${params.toString()}`);
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    const data = await response.json();
                    
                    if (isInitialLoad) {
                        if (data.allFilesForSuggestions) allFilesData = data.allFilesForSuggestions;
                        if (data.allCategories) {
                            allCategories = data.allCategories;
                            const categoryContainer = document.getElementById('categoryFilters');
                            categoryContainer.innerHTML = allCategories.map(cat => `
                                <div class="form-check">
                                    <input class="form-check-input category-checkbox" type="checkbox" value="${cat.toLowerCase()}" id="cat-${cat.toLowerCase()}">
                                    <label class="form-check-label" for="cat-${cat.toLowerCase()}">${cat}</label>
                                </div>`).join('');
                        }
                    }

                    loadingIndicator.style.display = 'none';
                    if (!data.files || data.files.length === 0) {
                        noResultsBlock.style.display = 'block';
                        resultsCounter.textContent = 'No results found.';
                        return;
                    }

                    data.files.forEach(file => fileCardsContainer.appendChild(createFileCardHTML(file)));
                    
                    if (data.totalPages > 1) {
                        paginationControls.style.display = 'flex';
                        prevButton.disabled = currentPage === 1;
                        nextButton.disabled = currentPage === data.totalPages;
                        pageIndicator.textContent = `Page ${currentPage} of ${data.totalPages}`;
                    }
                    resultsCounter.textContent = `Showing ${data.files.length} of ${data.totalFiles} results`;
                } catch (error) {
                    loadingIndicator.style.display = 'none';
                    noResultsBlock.style.display = 'block';
                    noResultsBlock.querySelector('h4').textContent = 'Error Loading Files';
                    noResultsBlock.querySelector('p').textContent = 'Could not connect to the server. Please try again later.';
                    console.error('Fetch error:', error);
                }
            };

            searchInput.addEventListener('input', () => {
                clearTimeout(searchDebounceTimeout);
                searchDebounceTimeout = setTimeout(() => {
                    currentFilters.search = searchInput.value;
                    currentPage = 1;
                    fetchAndRenderFiles();
                }, 500);
                updateSuggestions();
            });
            document.addEventListener('click', (e) => {
                if (!searchInput.parentElement.contains(e.target)) searchSuggestions.style.display = 'none';
            });
            
            applyFiltersBtn.addEventListener('click', () => {
                currentFilters.sort = sortBy.value;
                currentFilters.price = document.querySelector('input[name="priceFilter"]:checked').value;
                currentFilters.maxPrice = priceRange.value;
                currentFilters.categories = Array.from(document.querySelectorAll('.category-checkbox:checked')).map(cb => cb.value);
                currentPage = 1;
                fetchAndRenderFiles();
                filterModal.hide();
            });

            clearFiltersBtn.addEventListener('click', () => {
                sortBy.value = 'popular';
                document.getElementById('priceAll').checked = true;
                priceRange.value = priceRange.max;
                priceRangeValue.textContent = priceRange.max;
                document.querySelectorAll('.category-checkbox:checked').forEach(cb => cb.checked = false);
                applyFiltersBtn.click();
            });

            priceRange.addEventListener('input', () => { priceRangeValue.textContent = priceRange.value; });
            
            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    fetchAndRenderFiles();
                }
            });

            nextButton.addEventListener('click', () => {
                if (!nextButton.disabled) {
                    currentPage++;
                    fetchAndRenderFiles();
                }
            });

            fetchAndRenderFiles(true);
        });
    </script>
</body>
</html>
<%-include("footer")%>