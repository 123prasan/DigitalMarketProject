<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <title>Buy Premium Study PDFs, Notes & Resources | PDF Store</title>
    <meta name="title" content="Buy Premium Study PDFs, Notes & Resources | PDF Store">
    <meta name="description" content="Search, find, and download the best study PDFs and notes. Optimized resources for engineering, nursing, competitive exams (NEET, JEE, KCET), and school boards (SSLC, CBSE, ICSE) to help you succeed in Bengaluru and across India.">
    <meta name="keywords" content="buy pdf, study notes, engineering notes, bsc nursing pdf, neet study material, jee resources, kcet notes, sslc guide, cbse notes, icse study material, ugc net commerce, ugc net management, educational resources, bengaluru, india, pdf download, premium study material">
    <meta name="author" content="PDF Store">
    <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1">
    <link rel="canonical" href="https://pdfstore-qm6h.onrender.com/">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://pdfstore-qm6h.onrender.com/">
    <meta property="og:title" content="Buy Premium Study PDFs, Notes & Resources | PDF Store">
    <meta property="og:description" content="Search, find, and download the best study PDFs and notes for engineering, nursing, competitive exams, and more.">
    <meta property="og:image" content="https://pdfstore-qm6h.onrender.com/images/logo.png">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:site_name" content="PDF Store">
    <meta property="og:locale" content="en_IN">
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://pdfstore-qm6h.onrender.com/">
    <meta property="twitter:title" content="Buy Premium Study PDFs, Notes & Resources | PDF Store">
    <meta property="twitter:description" content="Search, find, and download the best study PDFs and notes for engineering, nursing, competitive exams, and more.">
    <meta property="twitter:image" content="https://pdfstore-qm6h.onrender.com/images/logo.png">
    <link rel="icon" href="/images/favicon.ico" sizes="any">
    <link rel="icon" href="/images/logo.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
    <meta name="theme-color" content="#111827">

    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "PDF Store",
      "url": "https://pdfstore-qm6h.onrender.com/",
      "potentialAction": {
        "@type": "SearchAction",
        "target": {
          "@type": "EntryPoint",
          "urlTemplate": "https://pdfstore-qm6h.onrender.com/?search={search_term_string}"
        },
        "query-input": "required name=search_term_string"
      }
    }
    </script>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Sora:wght@400;600;700;800&display=swap" rel="stylesheet">
    
    <style>
      :root {
        --font-family: 'Sora', sans-serif;
        --color-primary: #8b5cf6;
        --color-secondary: #ec4899;
        --color-success: #16a34a;
        --color-text: #e5e7eb;
        --color-text-muted: #9ca3af;
        --color-bg-dark: #111827;
        --color-bg-card: rgba(31, 41, 55, 0.5);
        --color-border: rgba(255, 255, 255, 0.1);
        --radius-xl: 1.25rem;
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.2), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
        --shadow-glow: 0 0 25px -5px rgba(139, 92, 246, 0.3);
        --transition: 0.3s ease-in-out;
        --gradient-buy: linear-gradient(90deg, var(--color-primary) 0%, var(--color-secondary) 100%);
        --gradient-download: linear-gradient(90deg, rgba(77, 54, 208, 1) 0%, rgba(132, 116, 254, 1) 100%);
      }
      body {
        font-family: var(--font-family); color: var(--color-text); background-color: var(--color-bg-dark);
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><g fill="%231f2937"><circle cx="20" cy="20" r="1.5"/><circle cx="50" cy="50" r="1"/><circle cx="80" cy="30" r="1.2"/><circle cx="10" cy="70" r="1"/><circle cx="90" cy="80" r="1.5"/></g></svg>');
      }
      .page-wrapper { min-height: 100vh; display: flex; flex-direction: column; }
      main { flex-grow: 1; }
      .hero-section { padding: 4rem 1rem; text-align: center; border-bottom: 1px solid var(--color-border); }
      .hero-title { font-weight: 800; font-size: clamp(2rem, 5vw, 3.5rem); color: #fff; margin-bottom: 0.5rem; }
      .hero-subtitle { font-size: clamp(1rem, 2vw, 1.25rem); color: var(--color-text-muted); margin-bottom: 2.5rem; max-width: 650px; margin: 0 auto 2.5rem; }
      .search-bar { margin: 0 auto; max-width: 600px; display: flex; align-items: center; background: var(--color-bg-card); backdrop-filter: blur(10px); border-radius: var(--radius-xl); box-shadow: var(--shadow-lg); border: 1px solid var(--color-border); transition: all var(--transition); }
      .search-bar:focus-within { box-shadow: var(--shadow-glow); border-color: var(--color-primary); }
      .search-bar .search-icon { color: var(--color-primary); font-size: 1.1rem; margin: 0 0.75rem 0 1.25rem; }
      .search-bar input { border: none; outline: none; flex: 1; font-size: 1.1rem; padding: 1rem 0; background: transparent; color: var(--color-text); }
      .search-bar input::placeholder { color: var(--color-text-muted); }
      .content-section { padding: 3rem 0; }
      .section-title { font-weight: 800; font-size: 1.75rem; margin-bottom: 0.5rem; color: #fff; }
      .section-subtitle { font-size: 1.1rem; color: var(--color-text-muted); max-width: 600px; margin-bottom: 2rem; }
      .popular-section { background-color: rgba(0,0,0,0.2); }
      .scrolling-wrapper { display: flex; gap: 1.5rem; overflow-x: auto; padding-bottom: 1.5rem; scrollbar-width: none; }
      .scrolling-wrapper::-webkit-scrollbar { display: none; }
      .scrolling-wrapper .file-card-wrapper { flex: 0 0 340px; }
      @keyframes card-fade-in { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
      .file-card-wrapper { animation: card-fade-in 0.6s ease-out forwards; opacity: 0; animation-fill-mode: both; }
      .file-card { background-color: var(--color-bg-card); backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px); border: 1px solid var(--color-border); border-radius: var(--radius-xl); box-shadow: var(--shadow-lg); transition: all 0.4s ease-out; overflow: hidden; height: 100%; display: flex; flex-direction: column; }
      .file-card:hover { transform: translateY(-8px); box-shadow: var(--shadow-glow); }
      .card-image-container { position: relative; overflow: hidden; }
      .card-img-top { width: 100%; display: block; aspect-ratio: 16 / 9; object-fit: cover; transition: transform 0.4s ease-out; }
      .file-card:hover .card-img-top { transform: scale(1.1); }
      .preview-btn-overlay { position: absolute; inset: 0; display: flex; align-items: center; justify-content: center; opacity: 0; transition: all var(--transition); cursor: pointer; background-color: rgba(0,0,0,0.4); }
      .file-card:hover .preview-btn-overlay { opacity: 1; }
      .preview-btn-bg { background-color: rgba(255, 255, 255, 0.2); backdrop-filter: blur(5px); border-radius: 99px; padding: 0.75rem; color: white; transition: background-color var(--transition); }
      .card-body-content { padding: 1.25rem; display: flex; flex-direction: column; flex-grow: 1; }
      .card-title { font-weight: 700; font-size: 1rem; line-height: 1.4; margin-bottom: 0.5rem; transition: color var(--transition); }
      .file-card:hover .card-title a { color: var(--color-primary); }
      a.text-inherit { color: inherit; text-decoration: none; }
      .card-metadata { display: flex; flex-wrap: wrap; gap: 1rem; font-size: 0.8rem; color: var(--color-text-muted); margin: 1rem 0; }
      .card-metadata .meta-item { display: flex; align-items: center; gap: 0.35rem; }
      .card-metadata .meta-item i { color: var(--color-primary); }
      .card-footer-actions { margin-top: auto; padding-top: 1rem; border-top: 1px solid var(--color-border); }
      .btn-uiverse { line-height: 1; background-color: transparent; cursor: pointer; display: flex; align-items: center; gap: 0.5em; padding: 0.75em 1.25em; color: #fff; border: 1px solid transparent; font-weight: 700; border-radius: 2em; font-size: 0.9rem; box-shadow: 0 0.7em 1.5em -0.5em hsla(249, 62%, 51%, 0.5); transition: transform 0.3s; width: 100%; text-decoration: none; justify-content: center; }
      .btn-uiverse:hover { border-color: rgba(255,255,255,0.8); }
      .btn-uiverse:active { transform: scale(0.98); }
      .btn-uiverse__icon { width: 1.5em; height: 1.5em; }
      .btn-uiverse__text { letter-spacing: 0.5px; }
      .btn-uiverse.download { background: var(--gradient-download); }
      .btn-uiverse.buy { background: var(--gradient-buy); }
      .copy-link-btn { position: absolute; top: 1rem; right: 1rem; width: 36px; height: 36px; border-radius: 50%; border: 1px solid var(--color-border); background-color: var(--color-bg-card); backdrop-filter: blur(5px); color: var(--color-text); display: flex; align-items: center; justify-content: center; cursor: pointer; transition: all var(--transition); }
      .copy-link-btn:hover { background-color: var(--color-primary); color: #fff; transform: scale(1.1); }
      .copy-link-btn.copied { background-color: var(--color-success); color: #fff; }
      .modal.dark-modal .modal-content { background-color: #1f2937; border: 1px solid var(--color-border); color: var(--color-text); }
      .modal.dark-modal .modal-header, .modal.dark-modal .modal-footer { border-color: var(--color-border); }
      .modal.dark-modal .btn-close { filter: invert(1); }
      .modal.dark-modal .form-control, .modal.dark-modal .form-select, .modal.dark-modal .form-check-input { background-color: #374151; border-color: #4b5563; color: var(--color-text); }
      .modal.dark-modal .form-check-input:checked { background-color: var(--color-primary); border-color: var(--color-primary); }
      .preview-modal .modal-content { border-radius: var(--radius-xl); overflow: hidden; border: none; background-color: #fff; color: #1f2937; }
      .preview-modal-header { padding: 1.5rem; border-bottom: 1px solid #e5e7eb; background-image: linear-gradient(to right, #f5f3ff, #fdf2f8); }
      .preview-modal-iframe-container { padding: 1rem; flex: 1; }
      .preview-modal-iframe { background-color: #f3f4f6; border-radius: 1rem; overflow: hidden; min-height: 400px; height: 100%; width: 100%; }
      .preview-modal-sidebar { width: 320px; padding: 1.5rem; background-color: #f9fafb; border-left: 1px solid #e5e7eb; }
      .sidebar-price .price-value { font-size: 2rem; font-weight: 800; }
      .sidebar-section-title { font-weight: 700; margin-bottom: 0.75rem; color: #374151; }
      #loadMoreTrigger .spinner-border { width: 3rem; height: 3rem; }
    </style>
</head>
<body>

    <% 
      const slugify = (text) => {
        if (!text) return 'file';
        return text.toString().toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
      };
      const formatBytes = (bytes, decimals = 2) => {
        if (!+bytes) return '0 Bytes';
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;
      };
      const allTypes = files.map(f => f.fileType || 'Other');
      const uniqueTypes = [...new Set(allTypes)];
      const popularFiles = [...files].sort((a, b) => (b.downloadCount || 0) - (a.downloadCount || 0)).slice(0, 5);
      const maxPrice = files.length > 0 ? Math.ceil(Math.max(...files.map(f => f.price || 0)) / 10) * 10 : 1000;
      const initialFiles = files.slice(0, 12);
    %>

    <div class="page-wrapper">
      <%- include('header') %>
      
      <main>
        <section class="hero-section">
          <div class="container">
            <h1 class="hero-title">Unlock Your Knowledge</h1>
            <p class="hero-subtitle">Instantly access premium notes, study guides, and resources. Search for your subject and get ahead today.</p>
            <div class="search-bar">
                <i class="fa fa-search search-icon"></i>
                <input type="text" id="searchInput" placeholder="Search by name, category, or description..." />
            </div>
          </div>
        </section>

        <section class="content-section popular-section">
          <div class="container">
            <h2 class="section-title">Popular Downloads</h2>
            <p class="section-subtitle">Explore resources that are helping thousands of students succeed right now.</p>
            <div class="scrolling-wrapper">
              <% popularFiles.forEach(file => { %>
                <div class="file-card-wrapper" style="width: 340px;">
                   <article class="file-card h-100">
                      <div class="card-image-container">
                          <img src="<%= file.previewUrl %>" alt="<%= file.filename %>" class="card-img-top">
                          <div class="preview-btn-overlay" onclick="handlePreviewClick(this)" data-file-json='<%- JSON.stringify(file) %>'>
                              <div class="preview-btn-bg"><i class="fas fa-eye fa-lg"></i></div>
                          </div>
                          <button class="copy-link-btn" onclick="copyFileLink(event, this, '<%= file._id %>', '<%= file.filename %>')" title="Copy link">
                            <i class="fas fa-link"></i>
                          </button>
                      </div>
                      <div class="card-body-content">
                          <h3 class="card-title"><a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="text-inherit"><%= file.filename %></a></h3>
                          <div class="card-metadata">
                              <span class="meta-item" title="File Type"><i class="fas fa-file-alt"></i> <%= file.fileType || 'PDF' %></span>
                              <span class="meta-item" title="File Size"><i class="fas fa-database"></i> <%= file.fileSize ? formatBytes(file.fileSize) : 'N/A' %></span>
                              <span class="meta-item" title="Downloads"><i class="fas fa-download"></i> <%= (file.downloadCount || 0).toLocaleString() %></span>
                          </div>
                          <div class="card-footer-actions">
                              <% if (file.price > 0) { %>
                                  <a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="btn-uiverse buy">
                                      <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 17h-11v-14h-2" /><path d="M6 5l14 1l-1 7h-13" /></svg>
                                      <span class="btn-uiverse__text">Buy for ₹<%= file.price %></span>
                                  </a>
                              <% } else { %>
                                  <a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="btn-uiverse download">
                                      <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" /><path d="M7 11l5 5l5 -5" /><path d="M12 4l0 12" /></svg>
                                      <span class="btn-uiverse__text">Download</span>
                                  </a>
                              <% } %>
                          </div>
                      </div>
                    </article>
                </div>
              <% }); %>
            </div>
          </div>
        </section>

        <section class="content-section">
          <div class="container">
            <div class="grid-header">
              <div>
                <h2 id="grid-main-title" class="section-title">Explore All Notes</h2>
                <p class="text-muted mb-0" id="resultsCounter"></p>
              </div>
              <div>
                <button class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#filterModal"><i class="fas fa-filter me-2"></i>Filter & Sort</button>
              </div>
            </div>
            <div class="row g-4" id="fileCards">
              <% initialFiles.forEach((file, index) => { %>
                <div class="col-xl-3 col-lg-4 col-md-6 file-card-wrapper" 
                  style="animation-delay: <%= index * 50 %>ms"
                  data-price="<%= file.price %>"
                  data-category="<%= (file.category || '').toLowerCase() %>"
                  data-type="<%= (file.fileType || 'other').toLowerCase() %>"
                  data-timestamp="<%= file.uploadedAt ? new Date(file.uploadedAt).getTime() : Date.now() - index %>"
                  data-downloads="<%= file.downloadCount || 0 %>"
                  data-search-terms="<%= `${file.filename} ${file.filedescription} ${file.category}`.toLowerCase() %>">
                  
                    <article class="file-card h-100">
                      <div class="card-image-container">
                          <img src="<%= file.previewUrl %>" alt="<%= file.filename %>" class="card-img-top">
                          <div class="preview-btn-overlay" onclick="handlePreviewClick(this)" data-file-json='<%- JSON.stringify(file) %>'>
                              <div class="preview-btn-bg"><i class="fas fa-eye fa-lg"></i></div>
                          </div>
                          <button class="copy-link-btn" onclick="copyFileLink(event, this, '<%= file._id %>', '<%= file.filename %>')" title="Copy link">
                            <i class="fas fa-link"></i>
                          </button>
                      </div>
                      <div class="card-body-content">
                          <h3 class="card-title"><a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="text-inherit"><%= file.filename %></a></h3>
                          <div class="card-metadata">
                              <span class="meta-item" title="File Type"><i class="fas fa-file-alt"></i> <%= file.fileType || 'PDF' %></span>
                              <span class="meta-item" title="File Size"><i class="fas fa-database"></i> <%= file.fileSize ? formatBytes(file.fileSize) : 'N/A' %></span>
                              <span class="meta-item" title="Downloads"><i class="fas fa-download"></i> <%= (file.downloadCount || 0).toLocaleString() %></span>
                          </div>
                          <div class="card-footer-actions">
                              <% if (file.price > 0) { %>
                                  <a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="btn-uiverse buy">
                                      <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 17h-11v-14h-2" /><path d="M6 5l14 1l-1 7h-13" /></svg>
                                      <span class="btn-uiverse__text">Buy for ₹<%= file.price %></span>
                                  </a>
                              <% } else { %>
                                  <a href="/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>" class="btn-uiverse download">
                                      <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" /><path d="M7 11l5 5l5 -5" /><path d="M12 4l0 12" /></svg>
                                      <span class="btn-uiverse__text">Download</span>
                                  </a>
                              <% } %>
                          </div>
                      </div>
                    </article>
                </div>
              <% }); %>
            </div>
            <div id="loadMoreTrigger" class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
          </div>
        </section>
      </main>
      
      <%- include('footer') %>
    </div>

    <div class="modal fade dark-modal" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
          <div class="modal-header"><h5 class="modal-title" id="filterModalLabel">Filter & Sort</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
          <div class="modal-body">
            <div class="mb-4"><h6 class="fw-bold">Sort by</h6><select class="form-select" id="sortBy"><option value="popular">Popularity</option><option value="newest">Newest</option><option value="price-asc">Price: Low to High</option><option value="price-desc">Price: High to Low</option></select></div>
            <div class="mb-4"><h6 class="fw-bold">Pricing</h6><div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="priceAll" value="all" checked><label class="form-check-label" for="priceAll">All</label></div><div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="pricePaid" value="paid"><label class="form-check-label" for="pricePaid">Paid</label></div><div class="form-check"><input class="form-check-input" type="radio" name="priceFilter" id="priceFree" value="free"><label class="form-check-label" for="priceFree">Free</label></div></div>
            <div class="mb-4"><h6 class="fw-bold">Category</h6><div id="categoryFilters"><% categories.forEach(category => { %><div class="form-check"><input class="form-check-input" type="checkbox" value="<%= category.toLowerCase() %>" id="cat-<%= category.toLowerCase().replace(/\s+/g, '-') %>"><label class="form-check-label" for="cat-<%= category.toLowerCase().replace(/\s+/g, '-') %>"><%= category %></label></div><% }); %></div></div>
            <div class="mb-4"><h6 class="fw-bold">File Type</h6><div id="fileTypeFilters"><% uniqueTypes.forEach(type => { %><div class="form-check"><input class="form-check-input" type="checkbox" value="<%= type.toLowerCase() %>" id="type-<%= type.toLowerCase().replace(/\s+/g, '-') %>"><label class="form-check-label" for="type-<%= type.toLowerCase().replace(/\s+/g, '-') %>"><%= type %></label></div><% }); %></div></div>
            <div><h6 class="fw-bold">Price Range</h6><input type="range" class="form-range" id="priceRange" min="0" max="<%= maxPrice %>" step="10" value="<%= maxPrice %>"><div class="d-flex justify-content-between small"><span>₹0</span><span id="priceRangeValue">₹<%= maxPrice %></span></div></div>
          </div>
          <div class="modal-footer"><button type="button" class="btn btn-outline-secondary" id="clearFiltersBtn">Clear All</button><button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="applyFiltersBtn">Apply</button></div>
        </div>
      </div>
    </div>
    <div class="modal fade preview-modal" id="pdfPreviewModal" tabindex="-1" aria-labelledby="pdfPreviewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen-lg-down modal-xl">
            <div class="modal-content">
                <div class="preview-modal-header"><div class="flex-grow-1"><h2 class="h5 fw-bold text-dark" id="modalFileName"></h2><p class="small text-muted mb-0" id="modalCategoryUser"></p></div><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div>
                <div class="modal-body p-0 d-flex flex-column flex-lg-row">
                    <div class="preview-modal-iframe-container"><div class="preview-modal-iframe"><iframe id="modalIframe" src="" class="w-100 h-100 border-0" title="PDF Preview"></iframe></div></div>
                    <div class="preview-modal-sidebar"><div class="sidebar-price"><div class="price-value" id="modalPrice"></div><p class="small text-muted" id="modalPriceSubtext"></p></div>
                        <div><h3 class="sidebar-section-title h6">Description</h3><p class="text-muted small" id="modalDescription"></p></div>
                        <div class="mt-4"><h3 class="sidebar-section-title h6">Features</h3><ul class="list-unstyled small text-muted"><li class="d-flex align-items-center mb-2"><i class="fas fa-check-circle text-success me-2"></i> High-quality content</li><li class="d-flex align-items-center mb-2"><i class="fas fa-check-circle text-success me-2"></i> Instant download</li><li class="d-flex align-items-center"><i class="fas fa-check-circle text-success me-2"></i> Lifetime access</li></ul></div>
                        <div class="mt-4 pt-4 border-top"><a href="#" id="modalActionBtn" class="w-100 py-3 fs-6"><span id="modalActionText"></span></a></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
      const allFilesData = <%- JSON.stringify(files) %>;
    </script>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" defer></script>
    <script>
        let pdfPreviewModal;
        let activeFiles = [];
        let currentIndex = 0;
        let observer;

        const slugifyJS = (text) => {
            if (!text) return 'file';
            return text.toString().toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
        };
        const formatBytesJS = (bytes, decimals = 2) => {
            if (!+bytes) return '0 Bytes';
            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;
        };

        const copyFileLink = (event, buttonElement, fileId, filename) => {
            event.stopPropagation();
            const slug = slugifyJS(filename);
            const linkToCopy = `${window.location.origin}/file/${slug}/${fileId}`;
            navigator.clipboard.writeText(linkToCopy).then(() => {
                const icon = buttonElement.querySelector('i');
                buttonElement.classList.add('copied'); icon.className = 'fas fa-check'; buttonElement.title = 'Copied!';
                setTimeout(() => {
                    buttonElement.classList.remove('copied'); icon.className = 'fas fa-link'; buttonElement.title = 'Copy link';
                }, 2000);
            }).catch(err => { console.error('Failed to copy text: ', err); });
        };

        const handlePreviewClick = (element) => {
            try {
                const fileJson = element.dataset.fileJson;
                const fileObject = JSON.parse(fileJson);
                showPreviewModal(fileObject);
            } catch (e) { console.error("Could not parse file data for preview modal:", e); }
        };

        const showPreviewModal = (file) => {
            document.getElementById('modalFileName').textContent = file.filename;
            document.getElementById('modalCategoryUser').textContent = `${file.category} • ${file.user || 'PDF Store'}`;
            document.getElementById('modalIframe').src = file.previewUrl;
            const priceEl = document.getElementById('modalPrice');
            const priceSubtextEl = document.getElementById('modalPriceSubtext');
            const actionBtn = document.getElementById('modalActionBtn');
            const actionText = document.getElementById('modalActionText');
            const fileUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;
            const downloadUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;
            if (file.price > 0) {
                priceEl.textContent = `₹${file.price}`; priceEl.style.color = '#16a34a'; priceSubtextEl.textContent = 'One-time purchase';
                actionBtn.href = fileUrl; actionBtn.className = 'btn-uiverse buy w-100 py-3 fs-6';
                actionText.innerHTML = `<svg class="btn-uiverse__icon" ...></svg><span class="btn-uiverse__text">Buy Now - ₹${file.price}</span>`;
            } else {
                priceEl.textContent = 'FREE'; priceEl.style.color = '#2563eb'; priceSubtextEl.textContent = 'Free download';
                actionBtn.href = downloadUrl; actionBtn.className = 'btn-uiverse download w-100 py-3 fs-6';
                actionText.innerHTML = `<svg class="btn-uiverse__icon" ...></svg><span class="btn-uiverse__text">Download Free</span>`;
            }
            document.getElementById('modalDescription').textContent = file.filedescription || 'No description available.';
            pdfPreviewModal.show();
        };
        
        document.addEventListener('DOMContentLoaded', () => {
            pdfPreviewModal = new bootstrap.Modal(document.getElementById('pdfPreviewModal'));
            const searchInput = document.getElementById('searchInput');
            const fileCardsContainer = document.getElementById('fileCards');
            const resultsCounter = document.getElementById('resultsCounter');
            const gridTitle = document.getElementById('grid-main-title');
            const categoryCheckboxes = document.querySelectorAll('#categoryFilters input[type="checkbox"]');
            const fileTypeCheckboxes = document.querySelectorAll('#fileTypeFilters input[type="checkbox"]');
            const priceRange = document.getElementById('priceRange');
            const priceRangeValue = document.getElementById('priceRangeValue');
            const sortBy = document.getElementById('sortBy');
            const clearFiltersBtn = document.getElementById('clearFiltersBtn');
            const applyFiltersBtn = document.getElementById('applyFiltersBtn');
            const loadMoreTrigger = document.getElementById('loadMoreTrigger');

            const createFileCardHTML = (file) => {
                const wrapper = document.createElement('div');
                wrapper.className = 'col-xl-3 col-lg-4 col-md-6 file-card-wrapper';
                wrapper.dataset.price = file.price;
                wrapper.dataset.category = (file.category || '').toLowerCase();
                wrapper.dataset.type = (file.fileType || 'other').toLowerCase();
                wrapper.dataset.timestamp = file.uploadedAt ? new Date(file.uploadedAt).getTime() : Date.now();
                wrapper.dataset.downloads = file.downloadCount || 0;
                wrapper.dataset.searchTerms = `${file.filename} ${file.filedescription} ${file.category}`.toLowerCase();
                
                const fileUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;
                const downloadUrl = `/file/${file.slug || slugifyJS(file.filename)}/${file._id}`;

                const actionButtonHTML = file.price > 0
                    ? `<a href="${fileUrl}" class="btn-uiverse buy">
                         <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" /><path d="M17 17h-11v-14h-2" /><path d="M6 5l14 1l-1 7h-13" /></svg>
                         <span class="btn-uiverse__text">Buy for ₹${file.price}</span>
                       </a>`
                    : `<a href="${downloadUrl}" class="btn-uiverse download">
                         <svg class="btn-uiverse__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" /><path d="M7 11l5 5l5 -5" /><path d="M12 4l0 12" /></svg>
                         <span class="btn-uiverse__text">Download</span>
                       </a>`;

                wrapper.innerHTML = `
                    <article class="file-card h-100">
                        <div class="card-image-container">
                            <img src="${file.previewUrl}" alt="${file.filename}" class="card-img-top">
                            <div class="preview-btn-overlay" onclick="handlePreviewClick(this)" data-file-json='${JSON.stringify(file)}'>
                                <div class="preview-btn-bg"><i class="fas fa-eye fa-lg"></i></div>
                            </div>
                            <button class="copy-link-btn" onclick="copyFileLink(event, this, '${file._id}', '${file.filename}')" title="Copy link"><i class="fas fa-link"></i></button>
                        </div>
                        <div class="card-body-content">
                            <h3 class="card-title"><a href="${fileUrl}" class="text-inherit">${file.filename}</a></h3>
                            <div class="card-metadata">
                                <span class="meta-item"><i class="fas fa-file-alt"></i> ${file.fileType || 'PDF'}</span>
                                <span class="meta-item"><i class="fas fa-database"></i> ${file.fileSize ? formatBytesJS(file.fileSize) : 'N/A'}</span>
                                <span class="meta-item"><i class="fas fa-download"></i> ${(file.downloadCount || 0).toLocaleString()}</span>
                            </div>
                            <div class="card-footer-actions">
                                ${actionButtonHTML}
                            </div>
                        </div>
                    </article>`;
                return wrapper;
            };

            const loadMoreFiles = () => {
                const chunkSize = window.innerWidth < 768 ? 3 : 8;
                const nextFiles = activeFiles.slice(currentIndex, currentIndex + chunkSize);
                if (nextFiles.length === 0) {
                    loadMoreTrigger.style.display = 'none';
                    if(observer) observer.disconnect();
                    return;
                }
                const fragment = document.createDocumentFragment();
                nextFiles.forEach(file => { fragment.appendChild(createFileCardHTML(file)); });
                fileCardsContainer.appendChild(fragment);
                currentIndex += nextFiles.length;
                if (currentIndex >= activeFiles.length) {
                    loadMoreTrigger.style.display = 'none';
                    if(observer) observer.disconnect();
                }
            };

            const runFilterAndSort = () => {
                const searchTerm = searchInput.value.trim().toLowerCase();
                const selectedCategories = Array.from(categoryCheckboxes).filter(cb => cb.checked).map(cb => cb.value);
                const selectedTypes = Array.from(fileTypeCheckboxes).filter(cb => cb.checked).map(cb => cb.value);
                const priceFilterValue = document.querySelector('input[name="priceFilter"]:checked').value;
                const maxPrice = parseFloat(priceRange.value);
                const sortValue = sortBy.value;

                let filtered = allFilesData.filter(file => {
                    const searchTerms = `${file.filename} ${file.filedescription} ${file.category}`.toLowerCase();
                    const searchMatch = searchTerm === '' || searchTerms.includes(searchTerm);
                    const categoryMatch = selectedCategories.length === 0 || selectedCategories.includes((file.category || '').toLowerCase());
                    const typeMatch = selectedTypes.length === 0 || selectedTypes.includes((file.fileType || 'other').toLowerCase());
                    const priceMatch = (priceFilterValue === 'all') || (priceFilterValue === 'paid' && file.price > 0) || (priceFilterValue === 'free' && file.price <= 0);
                    const priceRangeMatch = file.price <= maxPrice;
                    return searchMatch && categoryMatch && typeMatch && priceMatch && priceRangeMatch;
                });
                
                filtered.sort((a, b) => {
                    switch(sortValue) {
                        case 'price-asc': return a.price - b.price;
                        case 'price-desc': return b.price - a.price;
                        case 'newest': return new Date(b.uploadedAt) - new Date(a.uploadedAt);
                        case 'popular': default: return (b.downloadCount || 0) - (a.downloadCount || 0);
                    }
                });

                activeFiles = filtered;
                fileCardsContainer.innerHTML = '';
                resultsCounter.textContent = `Showing ${activeFiles.length} of ${allFilesData.length} results`;
                const isFiltered = searchTerm !== '' || selectedCategories.length > 0 || selectedTypes.length > 0 || priceFilterValue !== 'all' || parseFloat(priceRange.value) < parseFloat(priceRange.max);
                gridTitle.textContent = isFiltered ? 'Filtered Results' : 'Explore All Notes';
                
                currentIndex = 0;
                loadMoreTrigger.style.display = 'block';
                if(observer) observer.disconnect();
                loadMoreFiles(); 
                if (activeFiles.length > currentIndex) { observer.observe(loadMoreTrigger); }
            };
            
            observer = new IntersectionObserver((entries) => {
                if (entries[0].isIntersecting) { loadMoreFiles(); }
            }, { rootMargin: '0px 0px 500px 0px' });
            
            searchInput.addEventListener('input', () => {
                clearTimeout(searchInput.timer);
                searchInput.timer = setTimeout(runFilterAndSort, 300);
            });
            applyFiltersBtn.addEventListener('click', runFilterAndSort);
            priceRange.addEventListener('input', () => { priceRangeValue.textContent = `₹${priceRange.value}`; });
            clearFiltersBtn.addEventListener('click', () => {
                categoryCheckboxes.forEach(cb => cb.checked = false);
                fileTypeCheckboxes.forEach(cb => cb.checked = false);
                document.getElementById('priceAll').checked = true;
                priceRange.value = priceRange.max;
                priceRangeValue.textContent = `₹${priceRange.max}`;
                sortBy.value = 'popular';
                searchInput.value = '';
                runFilterAndSort();
            });
            
            runFilterAndSort();
        });
    </script>
</body>
</html>