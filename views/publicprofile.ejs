<div class="retro-profile-wrapper">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>User Profile</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500;700&family=VT323&display=swap" rel="stylesheet">
        
        <style>
            /* --- CSS Variables and Base Styles --- */
            :root {
                --bg-color: #0a041a;
                --primary-glow: #ff00c1;
                --secondary-glow: #00f7ff;
                --text-color: #d1d5db;
                --text-muted: #6b7280;
                --border-color: rgba(0, 247, 255, 0.2);
                --card-bg: rgba(23, 15, 48, 0.6);
            }

            body {
                background-color: var(--bg-color);
                color: var(--text-color);
                font-family: 'IBM Plex Mono', monospace;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                padding: 1rem;
            }

            /* --- Main Wrapper & Retro Effects --- */
            .retro-profile-wrapper {
                width: 100%;
                max-width: 900px;
                position: relative;
                background: var(--card-bg);
                backdrop-filter: blur(10px);
                padding: 2rem;
                border-radius: 8px;
                /* MODIFICATION: Removed border, box-shadow, and float animation for a cleaner look */
                animation: fadeIn 1s ease-out;
            }

            /* Scanline effect for that old CRT monitor feel */
            .retro-profile-wrapper::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: repeating-linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0.3) 1px, transparent 1px, transparent 4px);
                pointer-events: none;
                z-index: 10;
                animation: scanlines 10s linear infinite;
            }

            /* --- Profile Header Section --- */
            .profile-header {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 1.5rem;
                text-align: center;
            }
            @media (min-width: 640px) {
                .profile-header {
                    flex-direction: row;
                    text-align: left;
                    align-items: flex-start;
                }
            }
            
            .profile-avatar-container {
                flex-shrink: 0;
            }
            
            .profile-avatar {
                width: 120px;
                height: 120px;
                border-radius: 50%;
                object-fit: cover;
                border: 4px solid var(--secondary-glow);
                box-shadow: 0 0 15px var(--secondary-glow);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
            }
            .profile-avatar:hover {
                transform: scale(1.05) rotate(3deg);
                box-shadow: 0 0 25px var(--secondary-glow);
            }

            .profile-info {
                width: 100%;
            }

            .profile-main-info {
                display: flex;
                flex-direction: column;
                align-items: center;
                width: 100%;
                gap: 1rem;
            }
            @media (min-width: 640px) {
                .profile-main-info {
                    flex-direction: row;
                    justify-content: space-between;
                }
            }

            .profile-name {
                font-family: 'VT323', monospace;
                font-size: 3rem;
                color: #fff;
                text-shadow: 0 0 5px #fff, 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow);
                animation: textFlicker 3s infinite alternate;
                margin: 0;
            }

            .profile-username {
                color: var(--secondary-glow);
                margin-top: -0.5rem;
                letter-spacing: 2px;
            }
            
            /* NEW: Style for the join date */
            .profile-joindate {
                color: var(--text-muted);
                font-size: 0.9rem;
                margin-top: 0.5rem;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 0.5rem;
            }
            @media (min-width: 640px) {
                .profile-joindate {
                    justify-content: flex-start;
                }
            }

            .profile-follow-btn {
                background: transparent;
                border: 2px solid var(--primary-glow);
                color: var(--primary-glow);
                font-weight: bold;
                padding: 0.6rem 1.5rem;
                border-radius: 4px;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: inset 0 0 8px var(--primary-glow), 0 0 8px var(--primary-glow);
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            .profile-follow-btn:hover {
                background: var(--primary-glow);
                color: var(--bg-color);
                box-shadow: 0 0 20px var(--primary-glow);
            }

            /* MODIFICATION: Updated stats section to a grid for better layout */
            .profile-stats {
                display: grid;
                grid-template-columns: repeat(2, 1fr);
                gap: 1.5rem;
                margin-top: 1.5rem;
                text-align: center;
            }
             @media (min-width: 640px) {
                .profile-stats {
                    grid-template-columns: repeat(4, 1fr);
                    text-align: left;
                }
            }
            
            .stat-item .stat-number {
                font-weight: bold;
                font-size: 1.5rem;
                color: #fff;
                display: block;
            }
            .stat-item .stat-label {
                color: var(--text-muted);
                font-size: 0.9rem;
            }

            .profile-bio {
                margin-top: 1.5rem;
                color: var(--text-color);
                line-height: 1.6;
            }
            
            /* --- Tabs Section --- */
            .content-tabs {
                margin-top: 2.5rem;
                border-bottom: 2px solid var(--border-color);
            }
            .tabs-nav {
                display: flex;
                gap: 2rem;
                margin-bottom: -2px;
            }

            .tab-button {
                font-family: 'VT323', monospace;
                font-size: 1.75rem;
                background: none;
                border: none;
                color: var(--text-muted);
                padding: 0.5rem 0.25rem;
                cursor: pointer;
                border-bottom: 4px solid transparent;
                transition: all 0.3s ease;
            }

            .tab-button:hover {
                color: var(--secondary-glow);
            }
            .tab-button.is-active {
                color: var(--primary-glow);
                border-bottom-color: var(--primary-glow);
                text-shadow: 0 0 10px var(--primary-glow);
            }
            
            /* --- Content Grid & Sections --- */
            .content-main {
                margin-top: 2rem;
            }

            .content-section {
                display: none;
                animation: contentFadeIn 0.5s ease;
            }
            .content-section.is-active {
                display: block;
            }

            .docs-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 1rem;
            }

            .doc-item {
                aspect-ratio: 1 / 1;
                cursor: pointer;
                position: relative;
                overflow: hidden;
                border-radius: 6px;
                border: 2px solid var(--border-color);
            }

            .doc-thumbnail {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.4s ease, filter 0.4s ease;
            }
            .doc-item:hover .doc-thumbnail {
                transform: scale(1.1);
                filter: brightness(0.7);
            }

            /* --- Empty State for Courses --- */
            .empty-state {
                text-align: center;
                padding: 4rem 1rem;
                border: 2px dashed var(--border-color);
                border-radius: 6px;
            }
            .empty-state-icon {
                margin: 0 auto;
                height: 48px;
                width: 48px;
                color: var(--secondary-glow);
                opacity: 0.7;
            }
            .empty-state-title {
                margin-top: 0.5rem;
                font-size: 1.25rem;
                font-weight: 500;
                color: #fff;
            }
            .empty-state-text {
                margin-top: 0.25rem;
                color: var(--text-muted);
            }
            
            /* --- Keyframe Animations --- */
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(20px); }
                to { opacity: 1; transform: translateY(0); }
            }
            @keyframes contentFadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            /* MODIFICATION: Removed the 'float' animation */
            @keyframes scanlines {
                from { transform: translateY(0); }
                to { transform: translateY(40px); }
            }
            @keyframes textFlicker {
                0%, 19%, 22%, 25%, 53%, 57%, 100% {
                    text-shadow: 0 0 5px #fff, 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow);
                }
                20%, 24%, 55% {
                    text-shadow: none;
                }
            }
        </style>
    </head>
    
    <body>
        <header class="profile-header">
            <div class="profile-avatar-container">
                <img class="profile-avatar" src="<%= userData. profilePicUrl %>" alt="Profile Picture">
            </div>
            
            <div class="profile-info">
                <div class="profile-main-info">
                    <div>
                        <h1 class="profile-name">
                            <% if(userData.fullname && userData.fullname.length > 0) { %>
                                <%= userData.fullname %>
                            <% } else { %>
                                <%= userData.username %>
                            <% } %>
                        </h1>
                        <p class="profile-username">@<%= userData.username %></p>
                        <p class="profile-joindate">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71z"/>
                                <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0"/>
                            </svg>
                            <span id="join-date" data-createdat="<%= userData.createdAt %>"></span>
                        </p>
                    </div>
                    <button class="profile-follow-btn">Follow</button>
                </div>
                
                <div class="profile-stats">
                    <div class="stat-item">
                        <span class="stat-number"><%= numsOfDocs %></span>
                        <span class="stat-label">Docs Uploaded</span>
                    </div>
                     <div class="stat-item">
                        <span class="stat-number"><%= numOfCourses %></span>
                        <span class="stat-label">Courses</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">0</span> <span class="stat-label">Followers</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">0</span> <span class="stat-label">Following</span>
                    </div>
                </div>

                <p class="profile-bio">
                    <% if(userData.bio) { %>
                        <%= userData.bio %>
                    <% } else { %>
                        Digital explorer navigating the vast realms of code and creativity. 🚀
                    <% } %>
                </p>
            </div>
        </header>

        <div class="content-tabs">
            <nav class="tabs-nav" aria-label="Tabs">
                <button id="docs-tab" class="tab-button is-active">Docs</button>
                <button id="courses-tab" class="tab-button">Courses</button>
            </nav>
        </div>

        <main class="content-main">
            <div id="docs-section" class="content-section is-active">
                <div class="docs-grid">
                     <% files.forEach((file) => { %>
                        
                            <img onclick="window.location.href='/file/<%=file.slug%>/<%=file._id%>'" class="doc-thumbnail" src="<%= file.previewUrl %>" alt="Document thumbnail">
                        
                    <% }) %>
                </div>
            </div>

            <div id="courses-section" class="content-section">
                <div class="empty-state">
                    <svg class="empty-state-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v1.586m0 9.162v1.586M12 12.586v.01M4.75 8.25l1.06 1.06M18.19 15.69l1.06 1.06M4.75 15.69l1.06-1.06M18.19 8.25l1.06-1.06M12 21a9 9 0 110-18 9 9 0 010 18z" /></svg>
                    <h3 class="empty-state-title">No courses found</h3>
                    <p class="empty-state-text">Check back later for new courses and content.</p>
                </div>
            </div>
        </main>
        
        <script>
            // --- Tab Functionality ---
            const tabs = document.querySelectorAll('.tab-button');
            const contentSections = document.querySelectorAll('.content-section');

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('is-active'));
                    contentSections.forEach(s => s.classList.remove('is-active'));

                    tab.classList.add('is-active');

                    const targetId = tab.id.replace('-tab', '-section');
                    const targetSection = document.getElementById(targetId);
                    if (targetSection) {
                        targetSection.classList.add('is-active');
                    }
                });
            });

            // --- NEW: Time Ago Formatting ---
            document.addEventListener('DOMContentLoaded', () => {
                const joinDateElement = document.getElementById('join-date');
                const isoDate = joinDateElement.getAttribute('data-createdat');
                
                if (isoDate) {
                    joinDateElement.textContent = `Joined ${formatTimeAgo(isoDate)}`;
                }
            });

            function formatTimeAgo(dateString) {
                const date = new Date(dateString);
                const now = new Date();
                const seconds = Math.floor((now - date) / 1000);

                let interval = seconds / 31536000; // seconds in a year
                if (interval > 1) {
                    return Math.floor(interval) + " years ago";
                }
                interval = seconds / 2592000; // seconds in a month
                if (interval > 1) {
                    return Math.floor(interval) + " months ago";
                }
                interval = seconds / 86400; // seconds in a day
                if (interval > 1) {
                    return Math.floor(interval) + " days ago";
                }
                interval = seconds / 3600; // seconds in an hour
                if (interval > 1) {
                    return Math.floor(interval) + " hours ago";
                }
                interval = seconds / 60; // seconds in a minute
                if (interval > 1) {
                    return Math.floor(interval) + " minutes ago";
                }
                return "just now";
            }
        </script>
    </body>
</div>