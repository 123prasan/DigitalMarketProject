
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= userData.fullname || userData.username %> - Vidyari Profile</title>

    <meta name="description" content="View <%= userData.fullname || userData.username %>'s profile on Vidyari. Access shared docs, courses, followers, and explore their content.">
    <meta name="author" content="Vidyari">
    <link rel="canonical" href="https://vidyari.com/profile/<%= userData.username %>">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <meta name="robots" content="index, follow">

    <style>
        /* From Uiverse.io by vinodjangid07 */ 
.chatBtn {
  width: 55px;
  height: 55px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  border: none;
  background-color: #FFE53B;
  background-image: linear-gradient(147deg, #FFE53B, #FF2525,#FFE53B);
  cursor: pointer;
  padding-top: 3px;
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.164);
  position: relative;
  background-size: 300%;
  background-position: left;
  transition-duration: 1s;
}

.tooltip {
  position: absolute;
  top: -40px;
  opacity: 0;
  background-color: rgb(255, 180, 82);
  color: white;
  padding: 5px 10px;
  border-radius: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition-duration: .5s;
  pointer-events: none;
  letter-spacing: 0.5px;
}

.chatBtn:hover .tooltip {
  opacity: 1;
  transition-duration: .5s;
}

.chatBtn:hover {
  background-position: right;
  transition-duration: 1s;
}
        .profile-page-wrapper {
            --font-main: 'Montserrat', sans-serif;
            --color-bg: #fff;
            --color-black: #000000;
            --color-primary: #ff66a3; /* Pink */
            --color-secondary: #4ade80; /* Green */
            --color-accent: #ffd60a;   /* Yellow */
            --color-focus: #1ac2ff;   /* Blue */
            --transition: 0.2s ease;
        }

        .profile-page-wrapper {
            font-family: var(--font-main);
            background-color: var(--color-primary);
            color: var(--color-black);
            /* padding: 2rem; */
            /* min-height: 100vh; */
        }

        .profile-card {
            background: var(--color-bg);
            border: 4px solid var(--color-black);
            box-shadow: 12px 12px 0 var(--color-black);
            padding: 2.5rem;
            /* max-width: 900px; */
            margin: 0 auto;
        }
        
        .profile-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1.5rem;
            text-align: center;
            margin-bottom: 2rem;
        }
        @media (min-width: 768px) { 
            .profile-header { 
                flex-direction: row; 
                text-align: left; 
                align-items: flex-start;
            } 
        }
        
        .profile-avatar { 
            width: 120px; height: 120px; 
            object-fit: cover; border-radius: 50%; 
            border: 4px solid var(--color-black);
            box-shadow: 6px 6px 0 var(--color-black);
        }
        .profile-info { width: 100%; }
        
        .profile-main-info {
            display: flex;
            flex-direction: column;
            align-items: center;
            
            width: 100%;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }
        @media (min-width: 768px) { 
            .profile-main-info { 
                flex-direction: row; 
                justify-content: space-between; 
                align-items: center; 
            } 
        }

        .profile-name-block {
             display: flex; 
             align-items: center; 
             gap: 1rem;
        }

        .profile-name { 
            font-size: clamp(2rem, 5vw, 3rem); 
            font-weight: 900;
            color: var(--color-black);
            text-transform: uppercase;
            margin: 0; 
            line-height: 1;
        }
        
        .profile-username { 
            font-size: 1.1rem; 
            color: #555; 
            font-weight: 700;
            margin-top: 0.25rem;
        }
        
        .profile-bio { 
            margin-top: 1.5rem; 
            color: var(--color-black); 
            line-height: 1.6; 
            font-size: 1rem;
            font-weight: 500;
        }

        .chunky-btn {
            border: 3px solid var(--color-black);
            box-shadow: 4px 4px 0 var(--color-black);
            font-weight: 700;
            transition: all var(--transition);
            cursor: pointer;
            padding: 10px 20px;
            background-color: var(--color-secondary);
            color: var(--color-black);
            text-decoration: none;
            display: inline-block;
            font-size: 1rem;
            text-transform: uppercase;
        }
        .chunky-btn:hover {
            transform: translate(2px, 2px);
            box-shadow: 2px 2px 0 var(--color-black);
            background-color: var(--color-focus);
        }
        .chunky-btn.following {
             background: var(--color-black);
             color: #fff;
        }

        .profile-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .stat-card {
            background: var(--color-accent);
            border: 4px solid #000;
            box-shadow: 6px 6px 0 #000;
            padding: 1rem;
            text-align: center;
        }
        .stat-card .stat-number {
            font-size: 2.5rem;
            font-weight: 900;
            color: #000;
            display: block;
        }
        .stat-card .stat-label {
            font-size: 0.9rem;
            color: #000;
            text-transform: uppercase;
            font-weight: 700;
        }
        
        .content-tabs { margin-top: 2.5rem; border-bottom: 4px solid #000; }
        .tabs-nav { display: flex; gap: 0.5rem; margin-bottom: -4px; }
        .tab-button {
            font-size: 1.25rem;
            font-weight: 900;
            background: var(--color-bg);
            border: 3px solid #000;
            border-bottom: none;
            color: #000;
            padding: 0.5rem 1.5rem;
            cursor: pointer;
            text-transform: uppercase;
            transition: all 0.2s ease;
            box-shadow: 4px -4px 0 #000;
        }
        .tab-button:hover { background: #ccc; }
        .tab-button.is-active { 
            background: #000; 
            color: #fff; 
            box-shadow: 0 0 0 #000;
            transform: translateY(4px);
        }

        .content-main { margin-top: 2rem; }
        .content-section { display: none; }
        .content-section.is-active { display: block; }
        .content-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1.5rem;
        }
        
        .content-card {
            display: block;
            text-decoration: none;
            background: var(--color-bg);
            border: 3px solid #000;
            box-shadow: 8px 8px 0 #000;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .content-card:hover {
            transform: translate(-5px, -5px);
            box-shadow: 13px 13px 0 #000;
        }
        .content-card-thumbnail {
            width: 100%;
            aspect-ratio: 16 / 10;
            object-fit: cover;
            display: block;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 1rem;
            border: 4px dashed #000;
        }
        .empty-state i { font-size: 3rem; margin-bottom: 1rem; color: #000; }
        .empty-state h3 { font-size: 1.5rem; margin-top: 1rem; color: #000; text-transform: uppercase; font-weight: 900; }
    </style>
</head>

<body>
<div class="profile-page-wrapper">
    <div class="profile-card">
        <header class="profile-header">
            <div class="profile-avatar-container">
                <img class="profile-avatar" src="<%= userData.profilePicUrl %>" alt="Profile Picture">
            </div>
            <div class="profile-info">
                <div class="profile-main-info">
                    <div class="profile-name-block">
                         
                            <span title="Verified User" style="display: flex; align-items: center; gap: 0.5rem;">
                                                        <h1 class="profile-name"><%= userData.fullname || userData.username %></h1>
<% if (userData.ISVERIFIED) { %>
                                <img style="width: 40px; height: 40px;" src="/images/verify.png" alt="Verified Badge"/>
                            <% } %>
                            </span>
                         
                    </div>
                    <!-- From Uiverse.io by vinodjangid07 --> 

                    <div style="display: flex; align-items: center; gap: 1rem">
                                         <button class="chunky-btn" id="followBtn" data-user-id="<%= userData._id %>"></button>

                        <button class="chatBtn" onclick="window.location.href='/user/chat/<%=userData._id%>'">
 <svg height="1.6em" fill="white" xml:space="preserve" viewBox="0 0 1000 1000" y="0px" x="0px" version="1.1">
<path d="M881.1,720.5H434.7L173.3,941V720.5h-54.4C58.8,720.5,10,671.1,10,610.2v-441C10,108.4,58.8,59,118.9,59h762.2C941.2,59,990,108.4,990,169.3v441C990,671.1,941.2,720.5,881.1,720.5L881.1,720.5z M935.6,169.3c0-30.4-24.4-55.2-54.5-55.2H118.9c-30.1,0-54.5,24.7-54.5,55.2v441c0,30.4,24.4,55.1,54.5,55.1h54.4h54.4v110.3l163.3-110.2H500h381.1c30.1,0,54.5-24.7,54.5-55.1V169.3L935.6,169.3z M717.8,444.8c-30.1,0-54.4-24.7-54.4-55.1c0-30.4,24.3-55.2,54.4-55.2c30.1,0,54.5,24.7,54.5,55.2C772.2,420.2,747.8,444.8,717.8,444.8L717.8,444.8z M500,444.8c-30.1,0-54.4-24.7-54.4-55.1c0-30.4,24.3-55.2,54.4-55.2c30.1,0,54.4,24.7,54.4,55.2C554.4,420.2,530.1,444.8,500,444.8L500,444.8z M282.2,444.8c-30.1,0-54.5-24.7-54.5-55.1c0-30.4,24.4-55.2,54.5-55.2c30.1,0,54.4,24.7,54.4,55.2C336.7,420.2,312.3,444.8,282.2,444.8L282.2,444.8z"></path>
</svg>
<span  class="tooltip">Chat</span>
</button>
                    </div>
                </div>
                
                 <p class="profile-username">@<%= userData.username %></p>

                <div class="profile-stats">
                    <div class="stat-card">
                        <span class="stat-number"><%= numsOfDocs %></span>
                        <span class="stat-label">Docs</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number"><%= numOfCourses %></span>
                        <span class="stat-label">Courses</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number"><%= userData.followers.length || 0 %></span>
                        <span class="stat-label">Followers</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number"><%= userData.following.length || 0 %></span>
                        <span class="stat-label">Following</span>
                    </div>
                </div>

                <p class="profile-bio"><%= userData.bio || 'Digital explorer navigating the vast realms of code and creativity.' %></p>
            </div>
        </header>

        <div class="content-tabs">
            <nav class="tabs-nav" aria-label="Tabs">
                <button class="tab-button is-active" data-tab="docs-section">Docs</button>
                <button class="tab-button" data-tab="courses-section">Courses</button>
            </nav>
        </div>

        <main class="content-main">
            <div id="docs-section" class="content-section is-active">
                <% if (files && files.length > 0) { %>
                    <div class="content-grid">
                        <% files.forEach((file) => { %>
                            <a href="/file/<%= file.slug %>/<%= file._id %>" class="content-card">
                                <img class="content-card-thumbnail" src="<%= file.previewUrl %>" alt="Document thumbnail">
                            </a>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="empty-state">
                        <i class="fa-solid fa-file-circle-xmark"></i>
                        <h3>No Docs Found</h3>
                    </div>
                <% } %>
            </div>

            <div id="courses-section" class="content-section">
                <div class="empty-state">
                   <i class="fa-solid fa-book-open-reader"></i>
                   <h3>No courses found</h3>
                </div>
            </div>
        </main>
    </div>
</div>    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('.tab-button');
            const contentSections = document.querySelectorAll('.content-section');
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('is-active'));
                    contentSections.forEach(s => s.classList.remove('is-active'));
                    tab.classList.add('is-active');
                    document.getElementById(tab.dataset.tab).classList.add('is-active');
                });
            });

            const followBtn = document.getElementById('followBtn');
            let isFollowed = <%= isFollowed %>; 
            const userIdToFollow = followBtn.dataset.userId;

            function updateFollowButtonState() {
                if (isFollowed) {
                    followBtn.textContent = 'Following';
                    followBtn.classList.add('following');
                } else {
                    followBtn.textContent = 'Follow';
                    followBtn.classList.remove('following');
                }
            }

            followBtn.addEventListener('click', () => {
                const url = isFollowed ? `/user/unfollow` : `/user/follow`;
                followBtn.disabled = true;
                fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId: userIdToFollow })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        isFollowed = !isFollowed;
                        updateFollowButtonState();
                        window.location.reload(); 
                    } else {
                        alert(data.message || 'An error occurred.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred.');
                })
                .finally(() => {
                    followBtn.disabled = false;
                });
            });

            updateFollowButtonState();
        });
    </script>
</body>
</html>
