<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= userData.fullname || userData.username %> - Vidyari Profile</title>

    <!-- Basic SEO -->
    <meta name="description" content="View <%= userData.fullname || userData.username %>'s profile on Vidyari. Access shared docs, courses, followers, and explore their content.">
    <meta name="keywords" content="Vidyari user profile, <%= userData.username %>, <%= userData.fullname %>, study materials, online courses, docs, educational content, student profile">
    <meta name="author" content="Vidyari">

    <!-- Canonical URL -->
    <link rel="canonical" href="https://vidyari.com/profile/<%= userData.username %>">

    <!-- Open Graph / Social Media -->
    <meta property="og:title" content="<%= userData.fullname || userData.username %> - Vidyari Profile">
    <meta property="og:description" content="Explore <%= userData.fullname || userData.username %>'s profile, documents, courses, and educational contributions on Vidyari.">
    <meta property="og:type" content="profile">
    <meta property="og:url" content="https://vidyari.com/user/<%= userData.username %>">
    <meta property="og:image" content="<%= userData.profilePicUrl || 'https://vidyari.com/images/avatar.png' %>">

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="<%= userData.fullname || userData.username %> - Vidyari Profile">
    <meta name="twitter:description" content="View <%= userData.fullname || userData.username %>'s shared documents and courses on Vidyari.">
    <meta name="twitter:image" content="<%= userData.profilePicUrl || 'https://vidyari.com/images/avatar.png' %>">

    <!-- Structured Data (JSON-LD for Profile) -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "<%= userData.fullname || userData.username %>",
      "url": "https://vidyari.com/profile/<%= userData.username %>",
      "image": "<%= userData.profilePicUrl || 'https://vidyari.com/images/avatar.png' %>",
      "sameAs": [],
      "description": "<%= userData.bio || 'Digital explorer navigating the vast realms of code and creativity.' %>"
    }
    </script>

    <!-- Fonts and Icons -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500;700&family=VT323&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <!-- Robots -->
    <meta name="robots" content="index, follow">
    
    <!-- Your existing styles or CSS link here -->


    <style>
        /* ==========================================================================
           1. Variables & Base Styles
           ========================================================================== */
        :root {
            --bg-color: #0a041a;
            --primary-glow: #ff00c1;
            --secondary-glow: #00f7ff;
            --text-color: #d1d5db;
            --text-muted: #6b7280;
            --border-color: rgba(0, 247, 255, 0.2);
            --card-bg: rgba(23, 15, 48, 0.6);
            --following-bg: #4b5563;
            --following-border: #6b7280;
            --following-text: #e5e7eb;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: 'IBM Plex Mono', monospace;
            padding: 1.5rem;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        
        /* ==========================================================================
           2. Main Wrapper & Retro Effects
           ========================================================================== */
        .retro-profile-wrapper {
            width: 100%;
            max-width: 900px;
            position: relative;
            overflow: hidden; 
            background: var(--card-bg);
            backdrop-filter: blur(10px);
            padding: 2.5rem;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            box-shadow: 0 0 25px rgba(0, 247, 255, 0.1);
            animation: fadeIn 1s ease-out;
            z-index: 1;
        }

        .retro-profile-wrapper::after {
            content: '';
            position: absolute;
            top: 0; left: 0;
            width: 100%; height: 100%;
            background: repeating-linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0, rgba(0, 0, 0, 0.3) 1px, transparent 1px, transparent 4px);
            pointer-events: none;
            z-index: 3;
            animation: scanlines 10s linear infinite;
        }

        /* ==========================================================================
           3. Animated Background
           ========================================================================== */
        @keyframes move-stars {
            from { transform: translateY(0px); }
            to { transform: translateY(-2000px); }
        }
        .stars, .stars2, .stars3 {
            position: absolute;
            top: 0; left: 0;
            width: 100%; height: 200%;
            background-repeat: repeat;
            background-position: center;
            z-index: 2;
        }
        .stars {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><circle cx="10" cy="10" r="1" fill="white"/><circle cx="50" cy="80" r="0.5" fill="white"/><circle cx="80" cy="30" r="1" fill="white"/></svg>');
            animation: move-stars 200s linear infinite;
        }
        .stars2 {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200"><circle cx="30" cy="150" r="1.2" fill="white"/><circle cx="120" cy="40" r="0.8" fill="white"/><circle cx="180" cy="180" r="1.2" fill="white"/></svg>');
            animation: move-stars 150s linear infinite;
        }
        .stars3 {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><circle cx="250" cy="90" r="1.5" fill="white"/><circle cx="70" cy="220" r="1" fill="white"/><circle cx="150" cy="30" r="1.5" fill="white"/></svg>');
            animation: move-stars 100s linear infinite;
        }

        /* ==========================================================================
           4. Profile Header
           ========================================================================== */
        .profile-header {
            position: relative;
            z-index: 4;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1.5rem;
            text-align: center;
        }
        @media (min-width: 768px) { .profile-header { flex-direction: row; text-align: left; align-items: flex-start; } }
        
        .profile-name-wrapper {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .profile-name { 
            font-family: 'VT323', monospace; 
            font-size: 3.5rem; 
            color: #fff; 
            text-shadow: 0 0 5px #fff, 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow); 
            animation: textFlicker 3s infinite alternate; 
            margin: 0; 
            line-height: 1.1; 
        }

        /* NEW: Retro Verified Badge Styles */
        .profile-verified-badge {
            width: 28px;
            height: 28px;
            display: inline-block;
            vertical-align: middle;
            color: var(--secondary-glow);
            filter: drop-shadow(0 0 5px var(--secondary-glow));
            /* animation: glitch 2.5s infinite steps(2, start); */
        }
        .profile-verified-badge svg {
            width: 100%;
            height: 100%;
        }

        .profile-username { font-size: 1.1rem; color: var(--secondary-glow); letter-spacing: 2px; }

        /* ... Other styles remain unchanged ... */
        .profile-avatar-container { flex-shrink: 0; }
        .profile-avatar { width: 120px; height: 120px; border-radius: 50%; object-fit: cover; border: 4px solid var(--secondary-glow); box-shadow: 0 0 15px var(--secondary-glow); }
        .profile-info { width: 100%; }
        .profile-main-info { display: flex; flex-direction: column; align-items: center; width: 100%; gap: 1rem; }
        @media (min-width: 768px) { .profile-main-info { flex-direction: row; justify-content: space-between; } }
        .profile-follow-btn { background: transparent; border: 2px solid var(--primary-glow); color: var(--primary-glow); font-weight: bold; padding: 0.75rem 1.75rem; border-radius: 4px; cursor: pointer; transition: all 0.3s ease; box-shadow: inset 0 0 8px var(--primary-glow), 0 0 8px var(--primary-glow); text-transform: uppercase; letter-spacing: 1px; white-space: nowrap; }
        .profile-follow-btn:hover { background: var(--primary-glow); color: var(--bg-color); box-shadow: 0 0 20px var(--primary-glow); }
        .profile-follow-btn.following { background: var(--following-bg); color: var(--following-text); border-color: var(--following-border); box-shadow: none; }
        .profile-follow-btn.following:hover { background: var(--following-bg); filter: brightness(1.2); color: var(--following-text); }
        .profile-stats { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1.5rem; margin-top: 1.5rem; text-align: center; }
        @media (min-width: 768px) { .profile-stats { grid-template-columns: repeat(4, 1fr); text-align: left; } }
        .stat-item .stat-number { font-weight: bold; font-size: 2rem; color: #fff; display: block; }
        .stat-item .stat-label { color: var(--text-muted); font-size: 1rem; }
        .profile-bio { margin-top: 1.5rem; color: var(--text-color); line-height: 1.6; font-size: 1.1rem; }
        .content-tabs, .content-main { position: relative; z-index: 4; }
        .content-tabs { margin-top: 2.5rem; border-bottom: 2px solid var(--border-color); }
        .tabs-nav { display: flex; gap: 2rem; margin-bottom: -2px; }
        .tab-button { font-family: 'VT323', monospace; font-size: 2rem; background: none; border: none; color: var(--text-muted); padding: 0.5rem 0.25rem; cursor: pointer; border-bottom: 4px solid transparent; transition: all 0.3s ease; }
        .tab-button:hover { color: var(--secondary-glow); }
        .tab-button.is-active { color: var(--primary-glow); border-bottom-color: var(--primary-glow); text-shadow: 0 0 10px var(--primary-glow); }
        .content-main { margin-top: 2rem; }
        .content-section { display: none; animation: contentFadeIn 0.5s ease; }
        .content-section.is-active { display: block; }
        .content-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 1.5rem; height: 400px; overflow-y: auto; padding: 0.5rem; }
        .content-grid::-webkit-scrollbar { width: 8px; }
        .content-grid::-webkit-scrollbar-track { background: transparent; }
        .content-grid::-webkit-scrollbar-thumb { background: var(--border-color); border-radius: 4px; }
        .content-card { display: block; text-decoration: none; border-radius: 6px; border: 2px solid var(--border-color); overflow: hidden; transition: transform 0.3s ease, box-shadow 0.3s ease; }
        .content-card:hover { transform: translateY(-5px); box-shadow: 0 0 15px var(--border-color); }
        .content-card-thumbnail { width: 100%; height: 150px; object-fit: cover; }
        .empty-state { text-align: center; padding: 4rem 1rem; border: 2px dashed var(--border-color); border-radius: 6px; }
        .empty-state i { font-size: 3rem; opacity: 0.7; margin-bottom: 1rem; }
        .empty-state h3 { font-size: 1.5rem; margin-top: 1rem; }

        /* ==========================================================================
           6. Keyframe Animations
           ========================================================================== */
        @keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
        @keyframes contentFadeIn { from { opacity: 0; } to { opacity: 1; } }
        @keyframes scanlines { from { transform: translateY(0); } to { transform: translateY(40px); } }
        @keyframes textFlicker { 0%, 19%, 22%, 25%, 53%, 57%, 100% { text-shadow: 0 0 5px #fff, 0 0 10px var(--primary-glow), 0 0 20px var(--primary-glow); } 20%, 24%, 55% { text-shadow: none; } }
        /* NEW: Glitch animation for the verified badge */
        @keyframes glitch {
            0% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
            100% { transform: translate(0); }
        }
    </style>
</head>

<body>
    <div class="retro-profile-wrapper">
        <div class="stars"></div>
        <div class="stars2"></div>
        <div class="stars3"></div>

        <header class="profile-header">
            <div class="profile-avatar-container">
                <img class="profile-avatar" src="<%= userData.profilePicUrl %>" alt="Profile Picture">
            </div>
            <div class="profile-info">
                <div class="profile-main-info">
                    <div>
                        <div class="profile-name-wrapper">
                            <h1 class="profile-name"><%= userData.fullname || userData.username %></h1>
                            <% if (userData.ISVERIFIED) { %>
                                <span class="profile-verified-badge" title="Verified User">
                                    <img style="width: 50px; height: 50px;" src="/images/verify.png" alt="Verified Badge"/>
                                </span>
                            <% } %>
                        </div>
                        <p class="profile-username">@<%= userData.username %></p>
                    </div>
                    <button class="profile-follow-btn" id="followBtn" data-user-id="<%= userData._id %>"></button>
                </div>
                <div class="profile-stats">
                    <div class="stat-item"><span class="stat-number"><%= numsOfDocs %></span><span class="stat-label">Docs</span></div>
                    <div class="stat-item"><span class="stat-number"><%= numOfCourses %></span><span class="stat-label">Courses</span></div>
                    <div class="stat-item"><span class="stat-number"><%= userData.followers.length || 0 %></span><span class="stat-label">Followers</span></div>
                    <div class="stat-item"><span class="stat-number"><%= userData.following.length || 0 %></span><span class="stat-label">Following</span></div>
                </div>
                <p class="profile-bio"><%= userData.bio || 'Digital explorer navigating the vast realms of code and creativity. 🚀' %></p>
            </div>
        </header>

        <div class="content-tabs">
            <nav class="tabs-nav" aria-label="Tabs">
                <button class="tab-button is-active" data-tab="docs-section">Docs</button>
                <button class="tab-button" data-tab="courses-section">Courses</button>
            </nav>
        </div>

        <main class="content-main">
            <div id="docs-section" class="content-section is-active">
                <% if (files && files.length > 0) { %>
                    <div class="content-grid">
                        <% files.forEach((file) => { %>
                            <a href="/file/<%= file.slug %>/<%= file._id %>" class="content-card">
                                <img class="content-card-thumbnail" src="<%= file.previewUrl %>" alt="Document thumbnail">
                            </a>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="empty-state">
                        <i class="fa-solid fa-file-circle-xmark" style="color: var(--secondary-glow);"></i>
                        <h3 style="color: #fff;">No Docs Found</h3>
                    </div>
                <% } %>
            </div>

            <div id="courses-section" class="content-section">
                <div class="empty-state">
                     <i class="fa-solid fa-book-open-reader" style="font-size: 3rem; opacity: 0.7; color: var(--primary-glow);"></i>
                    <h3 style="font-size: 1.5rem; margin-top: 1rem;">No courses found</h3>
                </div>
            </div>
        </main>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('.tab-button');
            const contentSections = document.querySelectorAll('.content-section');
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('is-active'));
                    contentSections.forEach(s => s.classList.remove('is-active'));
                    tab.classList.add('is-active');
                    document.getElementById(tab.dataset.tab).classList.add('is-active');
                });
            });

            const followBtn = document.getElementById('followBtn');
            // This 'isFollowed' boolean must be passed from your EJS backend
            let isFollowed = <%= isFollowed %>; 
            const userIdToFollow = followBtn.dataset.userId;

            function updateFollowButtonState() {
                if (isFollowed) {
                    followBtn.textContent = 'Following';
                    followBtn.classList.add('following');
                } else {
                    followBtn.textContent = 'Follow';
                    followBtn.classList.remove('following');
                }
            }

            followBtn.addEventListener('click', () => {
                const url = isFollowed ? `/user/unfollow` : `/user/follow`;
                followBtn.disabled = true;

                fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId: userIdToFollow })
                })
                .then(response => {
                    if (!response.ok) throw new Error('Network response was not ok');
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        isFollowed = !isFollowed;
                        updateFollowButtonState();
                    } else {
                        alert(data.message || 'An error occurred.');
                    }
                })
                .catch(error => {
                    console.error('There was a problem with the follow/unfollow operation:', error);
                    alert('An error occurred. Please try again.');
                })
                .finally(() => {
                    followBtn.disabled = false;
                });
            });

            updateFollowButtonState();
        });
    </script>
</body>
</html>