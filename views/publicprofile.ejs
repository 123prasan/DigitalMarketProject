<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= userData.fullname || userData.username %> - Vidyari Profile</title>

    <meta name="description" content="View <%= userData.fullname || userData.username %>'s profile on Vidyari. Access shared docs, courses, followers, and explore their content.">
    <meta name="author" content="Vidyari">
    <link rel="canonical" href="https://vidyari.com/profile/<%= userData.username %>">
    <meta name="robots" content="index, follow">
    <meta property="og:title" content="<%= userData.fullname || userData.username %> on Vidyari">
    <meta property="og:description" content="<%- userData.bio || 'View ' + (userData.fullname || userData.username) + '\'s profile on Vidyari.' %>">
    <meta property="og:url" content="https://vidyari.com/profile/<%= userData.username %>">
    <meta property="og:image" content="<%= userData.profilePicUrl %>">
    <meta property="og:type" content="profile">
    <meta property="og:site_name" content="Vidyari">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="<%= userData.fullname || userData.username %> on Vidyari">
    <meta name="twitter:description" content="<%- userData.bio || 'View ' + (userData.fullname || userData.username) + '\'s profile on Vidyari.' %>">
    <meta name="twitter:image" content="<%= userData.profilePicUrl %>">
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "<%= userData.fullname || userData.username %>",
      "alternateName": "<%= userData.username %>",
      "url": "https://vidyari.com/profile/<%= userData.username %>",
      "image": "<%= userData.profilePicUrl %>",
      "description": "<%- JSON.stringify(userData.bio || 'Digital explorer navigating the vast realms of code and creativity.').slice(1, -1) %>",
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://vidyari.com/profile/<%= userData.username %>"
      }
    }
    </script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Anton&family=Space+Mono:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <style>
        :root {
            --font-heading: 'Anton', 'Arial Black', sans-serif;
            --font-body: 'Space Mono', monospace;
            --color-bg: #111111;
            --color-text: #ffffff;
            --color-black: #000000;
            --color-border: #ffffff;
            /* Multi-Color Palette */
            --color-accent-1: #00ff00; /* Electric Green - Primary UI */
            --color-accent-2: #ff00ff; /* Hot Pink - Headings & Glitch */
            --color-accent-3: #ff9900; /* Orange - Actions */
            --border-width: 4px;
            --border-style: var(--border-width) solid var(--color-border);
            --transition-speed: 0.15s ease-out;
        }

        /* --- Animations (Blink, Load, Glitch) --- */
        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0; }
        }

        @keyframes slideInLeft {
            from { transform: translateX(-100%); }
            to { transform: translateX(0); }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes glitch {
            0% { transform: translate(0); }
            20% { transform: translate(-3px, 3px); }
            40% { transform: translate(-3px, -3px); }
            60% { transform: translate(3px, 3px); }
            80% { transform: translate(3px, -3px); }
            100% { transform: translate(0); }
        }

        /* --- Global Reset & Layout --- */
        body {
            font-family: var(--font-body);
            background-color: var(--color-bg);
            color: var(--color-text);
            margin: 0;
            padding: 0;
            font-weight: 400;
            cursor: crosshair;
            overflow-x: hidden;
            
            /* "Blueprint" Grid Background */
            background-image: 
                linear-gradient(rgba(0, 255, 0, 0.07) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0, 255, 0, 0.07) 1px, transparent 1px);
            background-size: 25px 25px;
        }
        
        * {
            box-sizing: border-box;
            border-radius: 0 !important;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: var(--font-heading);
            font-weight: 400;
            text-transform: uppercase;
        }

        .brutal-profile-wrapper {
            display: grid;
            grid-template-columns: 350px 1fr;
            min-height: 100vh;
            transition: grid-template-columns 0.4s ease-out;
        }
        
        @media (max-width: 768px) {
            .brutal-profile-wrapper {
                grid-template-columns: 1fr;
            }
        }
        
        body.sidebar-collapsed .brutal-profile-wrapper {
             grid-template-columns: 0 1fr;
        }
        body.sidebar-collapsed .brutal-sidebar {
            transform: translateX(-100%);
            padding: 1.5rem 0;
            overflow: hidden;
        }
        /* MODIFICATION: Removed the transform: rotate(180deg) */
        body.sidebar-collapsed .sidebar-toggle {
            left: 10px;
            border-color: var(--color-accent-2);
        }

        /* --- Sidebar (Column 1) --- */
        .brutal-sidebar {
            padding: 1.5rem;
            border-right: var(--border-width) solid var(--color-accent-1);
            height: 100vh;
            position: sticky;
            top: 0;
            overflow-y: auto;
            animation: slideInLeft 0.5s cubic-bezier(0.25, 1, 0.5, 1);
            transition: transform 0.4s ease-out, padding 0.4s ease-out;
            -ms-overflow-style: none;
            scrollbar-width: none;
        }
        .brutal-sidebar::-webkit-scrollbar {
            display: none;
        }
        
        @media (max-width: 768px) {
            .brutal-sidebar {
                position: relative;
                height: auto;
                border-right: none;
                border-bottom: var(--border-width) solid var(--color-accent-1);
            }
        }
        
        .sidebar-avatar {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border: var(--border-width) solid var(--color-accent-1);
            display: block;
            margin-bottom: 1.5rem;
            image-rendering: pixelated;
            transition: all var(--transition-speed);
        }
        .sidebar-avatar:hover {
            filter: grayscale(1) contrast(300%);
            transform: scale(1.05);
        }
        
        .sidebar-name {
            font-size: 3rem;
            line-height: 1;
            color: var(--color-accent-1);
            margin: 0 0 1.5rem 0;
            word-wrap: break-word;
            position: relative;
            cursor: default;
        }
        
        .sidebar-name::before,
        .sidebar-name::after {
            content: attr(data-text);
            position: absolute;
            top: 0;
            left: 0;
            background: var(--color-bg);
            overflow: hidden;
            clip-path: inset(50% 0 50% 0);
            opacity: 0;
        }
        .sidebar-name::before {
            color: var(--color-accent-2); /* Pink glitch */
            animation: glitch 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
        }
        .sidebar-name:hover::before,
        .sidebar-name:hover::after {
            opacity: 1;
        }

        /* Brutal <fieldset> structure */
        .brutal-fieldset {
            border: var(--border-width) solid var(--color-accent-1); /* Green border */
            margin: 2rem 0 0 0;
            padding: 1.5rem 1rem;
        }
        .brutal-fieldset legend {
            font-family: var(--font-body);
            font-weight: 700;
            font-size: 1rem;
            color: var(--color-text); /* Clean white legend */
            background: var(--color-bg);
            padding: 0 0.5rem;
            margin-left: 1rem;
            text-transform: uppercase;
        }

        .sidebar-marquee-container {
            background: var(--color-accent-3); /* Orange marquee */
            color: var(--color-black);
            border: 2px solid var(--color-black);
            overflow: hidden;
        }
        .sidebar-marquee-container marquee {
            font-family: var(--font-body);
            font-weight: 700;
            padding: 5px 0;
            font-size: 1rem;
            display: block;
        }

        .sidebar-actions {
            margin: 0;
            padding: 0;
        }

        .action-button {
            display: block;
            width: 100%;
            background: var(--color-accent-3); /* Orange button */
            border: var(--border-width) solid var(--color-black);
            color: var(--color-black);
            font-family: var(--font-heading);
            padding: 1rem;
            margin-bottom: 1rem;
            font-size: 1.25rem;
            text-transform: uppercase;
            text-align: center;
            text-decoration: none;
            cursor: cell;
            transition: all var(--transition-speed);
        }
        .action-button:last-child {
            margin-bottom: 0;
        }
        .action-button:hover {
            transform: translate(4px, 4px);
            box-shadow: -4px -4px 0 var(--color-accent-3);
            background: var(--color-bg);
            color: var(--color-accent-3);
            border-color: var(--color-accent-3);
        }
        .action-button:active {
            transform: translate(0, 0);
            box-shadow: none;
        }
        .action-button.following {
            background: var(--color-black);
            color: var(--color-text);
            border-color: var(--color-border);
        }
        .action-button.following:hover {
            background: var(--color-text);
            color: var(--color-black);
            box-shadow: -4px -4px 0 var(--color-text);
        }
        
        .stats-list { list-style: none; padding: 0; margin: 0; }
        .stats-list li {
            display: flex;
            justify-content: space-between;
            align-items: baseline;
            margin-bottom: 0.75rem;
            border-bottom: 2px dashed #444;
            padding-bottom: 0.75rem;
        }
        .stats-list li:last-child {
            margin-bottom: 0;
        }
        .stats-list li strong {
            font-family: var(--font-heading);
            font-size: 2rem;
            color: var(--color-accent-1);
            line-height: 1;
            transition: all var(--transition-speed);
        }
        .stats-list li span {
            font-family: var(--font-body);
            font-weight: 700;
            text-transform: uppercase;
            color: #aaa;
        }
        .stats-list li:hover strong {
            color: var(--color-accent-2); /* Pink hover */
            transform: scale(1.1) rotate(-3deg);
            display: inline-block;
        }
        
        .info-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .info-list li {
            font-family: var(--font-body);
            font-size: 0.9rem;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin-bottom: 0.75rem;
            padding-bottom: 0.75rem;
            border-bottom: 2px dashed #444;
        }
        .info-list li:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: 0;
        }
        .info-list li span {
            color: #aaa;
            font-weight: 700;
            margin-right: 1rem;
        }
        .info-list li strong {
            color: var(--color-text);
            font-weight: 700;
            word-break: break-all;
        }
        
        .sidebar-toggle {
            position: absolute;
            bottom: 1rem;
            right: 1.5rem;
            width: 40px;
            height: 40px;
            background: var(--color-bg);
            border: 2px solid var(--color-border);
            color: var(--color-border);
            font-family: var(--font-body);
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s ease-out;
        }
        .sidebar-toggle:hover {
            background: var(--color-accent-2);
            color: var(--color-black);
            border-color: var(--color-accent-2);
        }
        @media (max-width: 768px) {
            .sidebar-toggle { display: none; }
        }

        /* --- Main Content (Column 2) --- */
        .brutal-content {
            padding: 2.5rem;
            animation: fadeIn 0.5s 0.1s ease-out backwards;
            overflow-y: auto;
            height: 100vh;
        }
        @media (max-width: 768px) {
            .brutal-content { height: auto; padding: 1.5rem; }
        }

        .content-section { margin-bottom: 3rem; }
        
        .content-heading {
            font-size: 3rem;
            color: var(--color-accent-2); /* Pink heading */
            border-bottom: 8px solid var(--color-accent-2); /* Pink border */
            display: inline-block;
            margin: 0 0 2rem 0;
        }
        .content-heading::after {
            content: '_';
            animation: blink 1s infinite;
            margin-left: 0.25ch;
            color: var(--color-accent-2);
        }
        @media (min-width: 768px) {
            .content-heading { font-size: 4rem; }
        }
        
        .doc-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
        }
        
        .doc-card-item {
            display: block;
            border: var(--border-style);
            text-decoration: none;
            color: var(--color-text);
            background: var(--color-bg);
            transition: all var(--transition-speed);
            position: relative;
            cursor: alias;
        }
        
        .doc-card-item:hover {
            transform: translate(8px, 8px);
            box-shadow: -8px -8px 0 var(--color-accent-1); /* Green shadow */
            background: var(--color-accent-1); /* Green background */
            color: var(--color-black);
            border-color: var(--color-black);
        }

        .doc-thumbnail {
            width: 100%;
            height: auto;
            aspect-ratio: 16 / 10;
            object-fit: cover;
            border-bottom: var(--border-style);
            display: block;
        }
        
        .doc-card-item:hover .doc-thumbnail {
            border-bottom-color: var(--color-black);
        }

        .doc-title {
            font-family: var(--font-body);
            font-weight: 700;
            font-size: 1.1rem;
            text-transform: none;
            word-wrap: break-word;
            margin: 0;
            padding: 1rem;
        }

        /* --- Empty State --- */
        .empty-state {
            border: var(--border-width) dashed var(--color-accent-2); /* Pink border */
            padding: 3rem 1.5rem;
            text-align: center;
        }
        
        .empty-state pre {
            font-family: var(--font-body);
            color: var(--color-accent-2); /* Pink ASCII */
            font-size: 1.25rem;
            text-align: center;
            margin: 0 0 1.5rem 0;
            line-height: 1.2;
        }

        .empty-state h3 {
            font-size: 1.75rem;
            margin: 0;
            color: var(--color-text);
        }

    </style>
</head>

<body>
    <div class="brutal-profile-wrapper">
        
        <aside class="brutal-sidebar">
            <img class="sidebar-avatar" src="<%= userData.profilePicUrl %>" alt="<%= userData.fullname || userData.username %>'s profile picture">
            
            <h1 class="sidebar-name" data-text="<%= userData.fullname || userData.username %>">
                <%= userData.fullname || userData.username %>
                <% if (userData.ISVERIFIED) { %>
                    <span title="Verified User" style="color: var(--color-accent-1); display: inline-block; margin-left: 0.5rem; image-rendering: pixelated;">
                        <img style="width: 28px; height: 28px; vertical-align: middle;" src="/images/verify.png" alt="Verified Badge"/>
                    </span>
                <% } %>
            </h1>
            
            <fieldset class="brutal-fieldset">
                <legend>// ACTIONS</legend>
                <div class="sidebar-actions">
                    <button class="action-button" id="followBtn" data-user-id="<%= userData._id %>">
                        </button>
                    <a href="/user/chat/<%=userData._id%>" class="action-button">
                        Chat
                    </a>
                </div>
            </fieldset>
            
            <fieldset class="brutal-fieldset">
                <legend>// STATUS</legend>
                <div class="sidebar-marquee-container">
                    <marquee scrollamount="4">
                        <%= (userData.bio || 'Digital explorer navigating the vast realms of code and creativity.').replace(/\r?\n|\r/g, " // ") %>
                    </marquee>
                </div>
            </fieldset>

            <fieldset class="brutal-fieldset">
                <legend>// STATS</legend>
                <ul class="stats-list">
                    <li>
                        <strong><%= numsOfDocs %></strong>
                        <span>Docs</span>
                    </li>
                    <li>
                        <strong><%= numOfCourses %></strong>
                        <span>Courses</span>
                    </li>
                    <li>
                        <strong><%= userData.followers.length || 0 %></strong>
                        <span>Followers</span>
                    </li>
                    <li>
                        <strong><%= userData.following.length || 0 %></strong>
                        <span>Following</span>
                    </li>
                </ul>
            </fieldset>
            
            <fieldset class="brutal-fieldset">
                <legend>// USER INFO</legend>
                <ul class="info-list">
                    <li>
                        <span>USERNAME:</span>
                        <strong>@<%= userData.username %></strong>
                    </li>
                    <li>
                        <span>STATUS:</span>
                        <strong style="color: var(--color-accent-1);">ONLINE</strong>
                    </li>
                    <% if (userData.createdAt) { %>
                    <li>
                        <span>JOINED:</span>
                        <strong><%= new Date(userData.createdAt).toLocaleDateString('en-CA') %></strong>
                    </li>
                    <% } %>
                    <li>
                        <span>ACCESS:</span>
                        <strong>PUBLIC_READ</strong>
                    </li>
                </ul>
            </fieldset>

            <button class="sidebar-toggle" id="toggleBtn" title="Hide Sidebar">&lt;&lt;</button>

        </aside>

        <main class="brutal-content">
            
            <section class="content-section" id="docs-section">
                <h2 class="content-heading">Docs</h2>
                
                <% if (files && files.length > 0) { %>
                    <div class="doc-grid">
                        <% files.forEach((file) => { %>
                            <a href="/file/<%= file.slug %>/<%= file._id %>" class="doc-card-item">
                                <img class="doc-thumbnail" src="<%= file.previewUrl %>" alt="Preview for <%= file.title || 'document' %>">
                                <h3 class="doc-title"><%= file.title || 'Untitled Document' %></h3>
                            </a>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="empty-state">
<pre>
    .--.
   |----|
   |====|
   |----|
   |====|
   |----|
   '----'
</pre>
                        <h3>No Docs Found</h3>
                    </div>
                <% } %>
            </section>
            
            <section class="content-section" id="courses-section">
                <h2 class="content-heading">Courses</h2>
                
                <div class="empty-state">
<pre>
     / / /
    / / /
   / / /
  / / /_________
 ( ( (         /
  \ \ \       /
   \ \ \     /
    \ \ \   /
     \ \ \ /
      \ \ /
       \ /
</pre>
                   <h3>No courses found</h3>
                </div>
            </section>

        </main>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            
            // --- Glitch Effect JS ---
            const nameEl = document.querySelector('.sidebar-name');
            if (nameEl) {
                nameEl.setAttribute('data-text', nameEl.textContent.trim());
            }

            // --- Sidebar Toggle JS (MODIFIED) ---
            const toggleBtn = document.getElementById('toggleBtn');
            if (toggleBtn) {
                toggleBtn.addEventListener('click', () => {
                    // Toggle the class on the body
                    document.body.classList.toggle('sidebar-collapsed');

                    // NEW: Check the state and update the button
                    if (document.body.classList.contains('sidebar-collapsed')) {
                        toggleBtn.textContent = '>>';
                        toggleBtn.title = 'Show Sidebar';
                    } else {
                        toggleBtn.textContent = '<<';
                        toggleBtn.title = 'Hide Sidebar';
                    }
                });
            }

            // --- Follow Button Logic ---
            const followBtn = document.getElementById('followBtn');
            let isFollowed = <%= isFollowed %>; 
            const userIdToFollow = followBtn.dataset.userId;

            function updateFollowButtonState() {
                if (isFollowed) {
                    followBtn.textContent = 'Following';
                    followBtn.classList.add('following');
                } else {
                    followBtn.textContent = 'Follow';
                    followBtn.classList.remove('following');
                }
            }

            followBtn.addEventListener('click', () => {
                const url = isFollowed ? `/user/unfollow` : `/user/follow`;
                followBtn.disabled = true;
                fetch(url, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId: userIdToFollow })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        isFollowed = !isFollowed;
                        updateFollowButtonState();
                        window.location.reload(); 
                    } else {
                        alert(data.message || 'An error occurred.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred.');
                })
                .finally(() => {
                    followBtn.disabled = false;
                });
            });

            updateFollowButtonState();
        });
    </script>
</body>
</html>