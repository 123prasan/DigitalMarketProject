<%-include("header")%>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>
        <% if(file.price==0) { %>
            <%= file.filename || 'File Download' %> • Download | Vidyari
        <% } else { %>
            <%= file.filename || 'File Checkout' %> • Secure Checkout | Vidyari
        <% } %>
    </title>

    <meta name="description"
        content="Securely purchase and instantly download '<%= file.filename %>'. <%= file.filedescription %> | Vidyari Checkout">
    <meta name="keywords"
        content="<%= file.filename %>, <%= file.category %>, secure checkout, study material download, premium notes purchase">
    <meta name="robots" content="index, follow">
    <meta name="author" content="Vidyari">
    <meta property="og:type" content="product">
    <meta property="og:url"
        content="https://vidyari.com/file/<%= file.slug || slugify(file.filename) %>/<%= file._id %>/checkout">
    <meta property="og:title" content="Checkout • <%= file.filename %> | Vidyari">
    <meta property="og:description"
        content="Instant and secure checkout for '<%= file.filename %>' on Vidyari. Download your study notes safely.">
    <meta property="og:image" content="<%= file.previewUrl || 'https://vidyari.com/images/logo-1200x630.png' %>">
    <meta name="twitter:card" content="summary_large_image">

    <link rel="icon" href="/images/logo.svg" type="image/svg" />
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
    <meta name="theme-color" content="#000000">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Anton&family=Inter:wght@400;700;900&display=swap" rel="stylesheet">

    <style>
        :root {
            --font-main: 'Inter', sans-serif;
            --font-display: 'Anton', sans-serif;
            --color-black: #000;
            --color-white: #fff;
            --color-accent: #0052FF;
            --color-primary-card: #ff66a3;
            --color-detail-bar: #fff;
            --color-paid: #E84C86;
            --color-free: #30B45E;
            --color-focus: #1ac2ff;
        }

        body {
            background-color: var(--color-black);
            color: var(--color-white);
            font-family: var(--font-main);
            overflow-x: hidden; /* Prevents horizontal overflow */
        }
        .container {
            max-width: 100%;
            margin: 0 auto;
        }
        .brutalist-container {
            background-color: var(--color-white);
            color: var(--color-black);
            border: 6px solid var(--color-black);
            box-shadow: 12px 12px 0 var(--color-black);
            padding: 2rem 2.5rem; 
            margin-bottom: 2rem;
            /* Ensure text wraps correctly in container */
            word-wrap: break-word; 
            overflow-wrap: break-word;
        }

        /* General Typography */
        h1, .display-5 {
            font-family: var(--font-display);
            text-transform: uppercase;
            color: var(--color-black);
            font-size: clamp(2rem, 5vw, 3.5rem); /* Responsive font size */
            margin-bottom: 1.25rem;
            word-wrap: break-word;
        }
        .price {
            font-family: var(--font-display);
            font-size: 3rem;
            color: var(--color-black);
            line-height: 1;
        }
        
        /* Main File Details Components */
        .pdf-preview-wrapper {
            width: 100%; padding-bottom: 125%; position: relative; background-color: #f0f0f0;
            border: 4px solid var(--color-black); box-shadow: 8px 8px 0 var(--color-black);
            transition: transform 0.3s, box-shadow 0.3s; overflow: hidden;
        }
        .description-box { background-color: #f0f0f0; border-left: 4px solid var(--color-black); padding: 1.25rem; color: var(--color-black); line-height: 1.6; margin-bottom: 2rem; }
        .stats-bar { border-top: 3px solid var(--color-black); border-bottom: 3px solid var(--color-black); padding: 0.75rem 0; color: var(--color-black); font-weight: 700; margin-bottom: 1.5rem; }
        .brutalist-button { 
            border: 3px solid var(--color-black); background: var(--color-black); color: var(--color-white); padding: 1rem;
            font-size: 1.2rem; font-weight: 700; text-transform: uppercase; cursor: pointer; position: relative;
            overflow: hidden; transition: transform 0.3s, box-shadow 0.3s; box-shadow: 6px 6px 0px rgba(0,0,0,0.5);
            text-align: center; text-decoration: none;
        }
        
        /* FIX: Creator Profile Styling */
        .user-profile-link {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            font-weight: 700;
            color: var(--color-black);
            transition: transform 0.2s;
            /* Ensure name doesn't overflow */
            max-width: 100%; 
        }
        .user-profile-link:hover {
            transform: scale(1.05);
            text-decoration: underline;
        }
        .user-profile-link img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: 2px solid var(--color-black);
            object-fit: cover;
        }
        .user-profile-link span {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* FIX: Like Button Styling */
        .LikesBtn-file {
            font-size: 1.5rem; /* Adjusted for better fit */
            cursor: pointer;
            color: var(--color-black);
            transition: transform 0.2s;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .LikesBtn-file:hover {
            transform: scale(1.1);
        }
        .LikesBtn-file .fa-solid {
            color: var(--color-primary-card); /* Highlight liked state */
        }

        /* --- RELATED DOCS SLIDER & MODAL STYLES --- */
        .related-header {
            display: flex; justify-content: space-between; align-items: center;
            font-family: var(--font-display); text-transform: uppercase;
            font-size: clamp(1.5rem, 4vw, 2.5rem);
            margin-bottom: 1.5rem; color: var(--color-black);
            border-bottom: 4px solid var(--color-black); padding-bottom: 10px;
        }
        
        /* Horizontal Slider Wrapper */
        .related-slider-wrapper { overflow-x: scroll; -webkit-overflow-scrolling: touch; padding-bottom: 15px; margin-bottom: 20px; }
        .related-slider-wrapper::-webkit-scrollbar { height: 8px; }
        .related-slider-wrapper::-webkit-scrollbar-thumb { background: var(--color-accent); border: 2px solid var(--color-black); }
        .related-slider { display: flex; gap: 15px; width: max-content; padding: 5px 0; }
        
        /* Card Structure for Slider */
        .file-card-wrapper { 
            transition: all 0.3s ease; height: 100%; padding: 0;
            width: 150px; flex-shrink: 0; 
        }
        @media (min-width: 576px) { .file-card-wrapper { width: 180px; } }
        @media (min-width: 992px) { .file-card-wrapper { width: 220px; } }

        .file-card {
            border: 3px solid var(--color-black); box-shadow: 4px 4px 0 var(--color-black);
            background: var(--color-primary-card); display: flex; flex-direction: column; 
            height: 100%; text-decoration: none; color: var(--color-black);
        }

        /* Card Elements */
        .file-card .card-img { flex-grow: 1; min-height: 120px; background-color: #fff; padding: 5px; position: relative; overflow: hidden; }
        .file-card .card-img img { width: 100%; height: 100%; object-fit: cover; }
        .stats-overlay { position: absolute; top: 0; left: 0; padding: 5px 8px; font-size: 0.7rem; color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.8); background: linear-gradient(to bottom, rgba(0,0,0,0.5), rgba(0,0,0,0)); z-index: 5; }
        .file-card .detail-bar { min-height: 40px; padding: 6px 8px; border-top: 3px solid var(--color-black); background: var(--color-detail-bar); display: flex; justify-content: space-between; align-items: center; flex-shrink: 0; }
        .file-title-related { font-size: 0.85rem; font-weight: 700; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; flex-grow: 1; color: var(--color-black); }
        .price-badge-related { padding: 2px 5px; border: 2px solid var(--color-black); font-weight: 900; font-size: 0.55rem; box-shadow: 1px 1px 0 var(--color-black); text-transform: uppercase; flex-shrink: 0; }
        .badge-free { background-color: var(--color-free); color: var(--color-white); }
        .badge-paid { background-color: var(--color-paid); color: var(--color-white); }
        .view-all-btn { background: var(--color-accent); color: var(--color-white); font-weight: 700; padding: 8px 15px; text-transform: uppercase; border: 3px solid var(--color-black); box-shadow: 3px 3px 0 var(--color-black); transition: all 0.2s; cursor: pointer; text-decoration: none; font-size: 0.9rem; }
        .view-all-btn:hover { transform: translate(1px, 1px); box-shadow: 1px 1px 0 var(--color-black); color: var(--color-white); }

        /* --- Full Grid Modal Styling (FIXED) --- */
        /* IMPORTANT: Setting .modal-dialog to full viewport height/width */
        /* --- Full Grid Modal Styling (FIXED) --- */
/* IMPORTANT: Setting .modal-dialog to full viewport height/width */
.modal-dialog {
    margin: 0;
    width: 100vw;
    max-width: 100vw; 
    height: 100vh;
    padding: 0;
    transform: translate(0, 0) !important; /* Override Bootstrap centering */
}
/* FIX: Modal content must also be 100% */
.modal-content-full {
    height: 100%; /* Ensure it fills the dialog */
    width: 100%;  /* Ensure it fills the dialog */
    background: var(--color-white);
    border: none;
    border-radius: 0;
}
        .modal-body-full {
            padding: 15px;
            overflow-y: auto;
        }
        .modal-header-full {
            background: var(--color-black);
            color: var(--color-white);
            border-bottom: 4px solid var(--color-accent);
            padding: 15px;
            font-family: var(--font-display);
            text-transform: uppercase;
            font-size: 1.5rem;
        }
        .modal-close-btn {
            color: var(--color-white);
            font-size: 2rem;
            opacity: 1;
            padding: 0;
            margin: 0;
            background: none;
            border: none;
        }
        .modal-related-grid .file-card-wrapper { padding: 5px; }
        .modal-related-grid .file-card { box-shadow: 6px 6px 0 var(--color-black); }
        
        /* Modal Grid setup */
        .related-grid {
            --bs-gutter-x: 10px;
            --bs-gutter-y: 10px;
        }
        @media (max-width: 576px) {
            .related-grid { --bs-gutter-x: 5px; --bs-gutter-y: 5px; }
        }
    </style>
</head>

<body>
    <% // Helper function for formatting file size
    const formatBytes=(bytes, decimals=2)=> {
        if (!+bytes) return '0 Bytes';
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes=['Bytes', 'KB' , 'MB' , 'GB' , 'TB' ];
        const i=Math.floor(Math.log(bytes) / Math.log(k));
        return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;
    }; %>
    
    <% // Card HTML Helper Function (used for initial slider rendering) 
    const renderFileCard = (doc) => {
        // Use a slugify function that must be available in the EJS scope
        const slugify = (text) => text ? text.toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-') : 'file';
        
        const fileUrl = `/file/${doc.slug || slugify(doc.filename)}/${doc._id}`;
        const priceBadgeText = doc.price > 0 ? `₹${doc.price}` : `FREE`;
        const priceBadgeClass = doc.price > 0 ? `badge-paid` : `badge-free`;

        return `
            <div>
                <a href="${fileUrl}" class="file-card-wrapper" style="display: block;">
                    <div class="file-card">
                        <div class="card-img">
                            <div class="stats-overlay">
                                <span class="stats-item" title="Creator"><i class="fas fa-user me-1"></i> ${doc.user || 'Admin'}</span>
                            </div>
                            <img 
                                src="${doc.previewUrl || '/images/fileDemo.jpg'}" 
                                alt="${doc.filename}" 
                                loading="lazy"
                            >
                        </div>
                        <div class="detail-bar">
                            <span class="file-title-related" title="${doc.filename}">${doc.filename}</span>
                            <span class="price-badge-related ${priceBadgeClass}">${priceBadgeText}</span>
                        </div>
                    </div>
                </a>
            </div>
        `;
    }; %>

    <main class="py-4">
        <div class="container">
            <div class="brutalist-container">
                <div class="row align-items-center g-4 g-lg-5">

                    <div class="col-lg-7">
                        <% if (previewUrl) { %>
                            <div class="pdf-preview-wrapper rounded-0">
                                <img class="pdf-preview" src="<%= previewUrl %>" alt="PDF Preview of <%= file.filename %>">
                            </div>
                        <% } else { %>
                            <div class="no-preview-placeholder rounded-0">No Preview Available</div>
                        <% } %>
                    </div>

                    <div class="col-lg-5">
                        <div class="d-flex flex-column">

                            <div class="category-badge">
                                <%= file.category %>
                            </div>

                            <h1 class="fw-bolder display-5"><%- file.filename || 'Untitled File' %></h1>

                            <div class="stats-bar d-flex align-items-center gap-3">
                                <span title="Rating"><i class="fas fa-star"></i> 4.5</span>
                                <span>|</span>
                                <span title="Total Downloads">
                                    <i class="fas fa-download me-1"></i>
                                    <%= (file.downloadCount || 0).toLocaleString() %>
                                </span>
                            </div>

                            <% if (file.filedescription) { %>
                                <div class="description-box small">
                                    <%-file.filedescription %>
                                </div>
                            <% } %>
                            
                            <div class="row row-cols-2 g-3 detail-item-grid">
                                <div class="col">
                                    <div class="detail-item">
                                        <span class="d-block small mb-1">File Type</span>
                                        <span class="fw-semibold"><%= file.fileType || 'PDF' %></span>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="detail-item">
                                        <span class="d-block small mb-1">File Size</span>
                                        <span class="fw-semibold"><%= file.fileSize ? formatBytes(file.fileSize) : 'N/A' %></span>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="detail-item">
                                        <span class="d-block small mb-1">Uploaded</span>
                                        <span class="fw-semibold"><%= file.uploadedAt ? new Date(file.uploadedAt).toLocaleDateString() : 'N/A' %></span>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="detail-item">
                                        <span class="d-block small mb-1">Creator</span>
                                        <a href="/profile/<%= file.user || 'admin' %>" class="user-profile-link">
                                            <img src="<%= sellerprofilepic || '/images/avatar.jpg' %>" alt="profile"/>
                                            <span><%= file.user || 'Admin' %></span>
                                        </a>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center justify-content-between actions-bar">
                                <span class="LikesBtn-file"></span>
                                <div class="price">₹<%= file.price %></div>
                            </div>

                            <% if (Number(file.price) > 0) { %>
                                <button id="rzp-button" class="brutalist-button w-100 d-flex align-items-center justify-content-center gap-2" type="button">
                                    <i class="fa-solid fa-cart-shopping"></i>
                                    <span>Buy Now</span>
                                </button>
                            <% } else { %>
                                <a href="/download?file_id=<%=file._id%>" class="brutalist-button w-100 d-flex align-items-center justify-content-center gap-2" id="downloadBtn">
                                   <i class="fa-solid fa-download"></i>
                                   <span>Download Now</span>
                                </a>
                            <% } %>

                            <div class="trust-badges d-flex justify-content-around text-center small">
                                <div><i class="fas fa-shield-alt d-block mb-1"></i>Secure Payment</div>
                                <div><i class="fas fa-bolt d-block mb-1"></i>Instant Download</div>
                                <div><i class="fas fa-thumbs-up d-block mb-1"></i>Trusted Quality</div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="mt-5">
                    <%- include("reporttemplate") %>
                </div>
            </div>
            
            <% 
                const initialRelatedFiles = typeof relatedFilesData !== 'undefined' ? relatedFilesData : [];
            %>
            <div class="brutalist-container">
                <div class="related-header">
                    <span>Related Documents</span>
                    <button class="view-all-btn" id="viewAllRelatedBtn">View All (<span id="relatedCount"><%= initialRelatedFiles.length %></span>)</button>
                </div>
                <div class="related-slider-wrapper">
                    <div class="related-slider" id="relatedSlider">
                        <% initialRelatedFiles.slice(0, 6).forEach(doc => { %>
                            <%- renderFileCard(doc) %>
                        <% }); %>
                        <% if (initialRelatedFiles.length === 0) { %>
                            <p id="sliderNoResults" class="text-dark">Loading related files...</p>
                        <% } %>
                    </div>
                </div>
            </div>
            <%- include("chat") %>

        </div>
    </main>
    
    <div class="modal fade" id="relatedFilesModal" tabindex="-1" aria-labelledby="relatedFilesModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content modal-content-full">
                <div class="modal-header modal-header-full">
                    <h5 class="modal-title" id="relatedFilesModalLabel">All Related Documents</h5>
                    <button type="button" class="btn-close modal-close-btn" data-bs-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                </div>
                <div class="modal-body modal-body-full">
                    <div class="row related-grid modal-related-grid row-cols-2 row-cols-sm-4 row-cols-md-4 row-cols-lg-5" id="modalRelatedGrid">
                        </div>
                    <div id="modalLoading" class="text-center py-5" style="display: none;">
                        <div class="spinner-border text-dark" role="status"></div>
                        <p class="text-dark mt-2">Loading all related files...</p>
                    </div>
                    <p id="modalNoResults" class="text-dark text-center mt-4" style="display: none;">No other related documents found.</p>
                </div>
            </div>
        </div>
    </div>
    <%- include('footer') %>

    <script>
// JavaScript function to slugify text, must match the EJS helper's logic
const slugifyJS = (text) => text ? text.toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-') : 'file';

// JavaScript function to render a file card (used for dynamic modal content)
const renderFileCardJS = (doc) => {
    const fileUrl = `/file/${doc.slug || slugifyJS(doc.filename)}/${doc._id}`;
    const priceBadgeText = doc.price > 0 ? `₹${doc.price}` : `FREE`;
    const priceBadgeClass = doc.price > 0 ? `badge-paid` : `badge-free`;

    // The 'col' class is applied by the parent EJS row loop, 
    // but the wrapper needs the padding/styling.
    return `
        <div class="col">
            <a href="${fileUrl}" class="file-card-wrapper" style="display: block; padding: 5px;">
                <div class="file-card">
                    <div class="card-img">
                        <div class="stats-overlay">
                            <span class="stats-item" title="Creator"><i class="fas fa-user me-1"></i> ${doc.user || 'Admin'}</span>
                        </div>
                        <img 
                            src="${doc.previewUrl || '/images/fileDemo.jpg'}" 
                            alt="${doc.filename}" 
                            loading="lazy"
                        >
                    </div>
                    <div class="detail-bar">
                        <span class="file-title-related" title="${doc.filename}">${doc.filename}</span>
                        <span class="price-badge-related ${priceBadgeClass}">${priceBadgeText}</span>
                    </div>
                </div>
            </a>
        </div>
    `;
};


document.addEventListener('DOMContentLoaded', function() {
    // --- Data and Constants ---
    const currentFileId = "<%= file._id %>";
    const viewAllBtn = document.getElementById('viewAllRelatedBtn');
    const relatedSlider = document.getElementById('relatedSlider');
    const modalGridContainer = document.getElementById('modalRelatedGrid');
    const modalLoading = document.getElementById('modalLoading');
    const modalNoResults = document.getElementById('modalNoResults');
    const relatedCountSpan = document.getElementById('relatedCount');
    const relatedFilesModal = new bootstrap.Modal(document.getElementById('relatedFilesModal'));
    
    const sliderNoResults = document.getElementById('sliderNoResults');

    // --- Liking Logic ---
    const likeBtnfile = document.querySelector(".LikesBtn-file");
    if (likeBtnfile) {
        let fileLikes = <%= file.likes %>;
        let allFiles = JSON.parse(localStorage.getItem("fileData")) || {};

        function updateLikeButton() {
            if (allFiles[currentFileId] && allFiles[currentFileId].liked) {
                likeBtnfile.innerHTML = `<i class="fa-solid fa-thumbs-up"></i> ${fileLikes}`;
            } else {
                likeBtnfile.innerHTML = `<i class="fa-regular fa-thumbs-up"></i> ${fileLikes}`;
            }
        }
        updateLikeButton();
        likeBtnfile.onclick = function () { 
            if (allFiles[currentFileId] && allFiles[currentFileId].liked) {
                fileLikes--;
                allFiles[currentFileId].liked = false;
                fetch(`/files/impression/${currentFileId}/dislike`).catch(err => console.error(err));
            } else {
                fileLikes++;
                if (!allFiles[currentFileId]) allFiles[currentFileId] = {};
                allFiles[currentFileId].liked = true;
                fetch(`/files/impression/${currentFileId}/like`).catch(err => console.error(err));
            }
            localStorage.setItem("fileData", JSON.stringify(allFiles));
            updateLikeButton();
        };
    }
    
    // --- Buy Button Logic ---
    const buyButton = document.getElementById('rzp-button');
    if (buyButton) {
        buyButton.onclick = function (e) {
            window.location.href = "/checkout?fileId=" + currentFileId;
            e.preventDefault();
        }
    }

    // --- Core Fix: Fetch and Render Related Docs (for Slider and Modal) ---
    const fetchRelatedFiles = async (isModalView = false) => {
        if (isModalView) {
            modalGridContainer.innerHTML = '';
            modalNoResults.style.display = 'none';
            modalLoading.style.display = 'block';
        } else if (sliderNoResults) {
            // Hide the initial EJS message when fetching starts
            relatedSlider.innerHTML = ''; 
        }

        try {
            const response = await fetch(`/products/related?fileId=${currentFileId}`);
            if (!response.ok) throw new Error(`HTTP Error: ${response.status}`);
            
            const relatedDocs = await response.json();

            // 1. Update the Slider (regardless of view)
            if (relatedDocs && relatedDocs.length > 0) {
                const sliderCardsHTML = relatedDocs.slice(0, 6).map(doc => renderFileCardJS(doc)).join('');
                relatedSlider.innerHTML = sliderCardsHTML;
                relatedCountSpan.textContent = relatedDocs.length;
                
                // 2. Handle Modal View
                if (isModalView) {
                    modalLoading.style.display = 'none';
                    const allCardsHTML = relatedDocs.map(doc => renderFileCardJS(doc)).join('');
                    modalGridContainer.innerHTML = allCardsHTML;
                }
            } else {
                relatedSlider.innerHTML = '<p class="text-dark ps-2">No related files found.</p>';
                relatedCountSpan.textContent = 0;
                
                if (isModalView) {
                    modalLoading.style.display = 'none';
                    modalNoResults.style.display = 'block';
                    modalGridContainer.innerHTML = '';
                }
            }
            
            if (isModalView) relatedFilesModal.show();

        } catch (error) {
            console.error("Error fetching related files:", error);
            if (isModalView) {
                modalLoading.style.display = 'none';
                modalGridContainer.innerHTML = `<p class="text-danger text-center mt-4">Could not load related documents. ${error.message}</p>`;
                relatedFilesModal.show();
            } else {
                relatedSlider.innerHTML = '<p class="text-danger ps-2">Error loading files.</p>';
            }
        }
    };

    // --- Initial Load for Slider ---
    fetchRelatedFiles(false);

    // --- Event Listener for View All Button (FIXED) ---
    if (viewAllBtn) {
        viewAllBtn.addEventListener('click', (e) => {
            e.preventDefault();
            fetchRelatedFiles(true); // Fetch data and show modal
        });
    }
}); 
    </script>

</body>

</html>