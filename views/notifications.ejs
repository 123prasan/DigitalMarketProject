<%-include("header")%>
<!DOCTYPE html>

<html lang="en">


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifications</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;900&display=swap" rel="stylesheet">
    <style>
        /* --- UNIFIED "RETRO-BRUTALIST" THEME --- */
        :root {
            --font-main: 'Montserrat', sans-serif;
            --color-bg: #fff;
            --color-black: #000000;
            --color-primary: #ff66a3; /* Pink */
            --color-secondary: #4ade80; /* Green */
            --color-accent: #ffd60a;   /* Yellow */
            --color-focus: #1ac2ff;   /* Blue */
        }

        .vidyari-notifications-body {
            font-family: var(--font-main);
            background-color: var(--color-primary); /* Use theme color for page bg */
            color: var(--color-black);
            min-height: 100%;
            display: flex;
            flex-direction: column;
            /* padding: 2rem 1rem; */
        }

        .vidyari-notifications-container * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* --- Main Container --- */
        .vidyari-notifications-container {
            width: 100%;
            /* max-width: 800px; */
            margin: auto;
            height: 100%;
            background-color: var(--color-bg);
            border: 4px solid var(--color-black);
            /* box-shadow: 12px 12px 0 var(--color-black); */
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }

        /* --- Header --- */
        .vidyari-notifications-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 4px solid var(--color-black);
        }

        .vidyari-notifications-title {
            font-size: 1.75rem;
            font-weight: 900;
            text-transform: uppercase;
            color: var(--color-black);
        }

        /* --- Tab Navigation --- */
        .vidyari-notification-tabs {
            display: flex;
            border-bottom: 4px solid var(--color-black);
            padding: 0.5rem 1.5rem;
            gap: 0.5rem;
            overflow-x: auto;
        }
        .vidyari-notification-tabs::-webkit-scrollbar { height: 4px; }
        .vidyari-notification-tabs::-webkit-scrollbar-thumb { background: var(--color-black); }

        .vidyari-notification-tab {
            background: none;
            border: 3px solid var(--color-black);
            box-shadow: 3px 3px 0 var(--color-black);
            color: var(--color-black);
            font-family: var(--font-main);
            font-weight: 700;
            padding: 0.5rem 1rem;
            cursor: pointer;
            font-size: 0.9rem;
            display: flex;
            gap: 0.5rem;
            align-items: center;
            white-space: nowrap;
            transition: all 0.2s ease;
        }
        .vidyari-notification-tab:hover {
            background-color: var(--color-accent);
        }
        .vidyari-notification-tab.active {
            background-color: var(--color-black);
            color: #fff;
            transform: translate(3px, 3px);
            box-shadow: 0 0 0 var(--color-black);
        }

        .vidyari-tab-count {
            background-color: var(--color-primary);
            color: var(--color-black);
            font-size: 0.75rem;
            font-weight: 900;
            padding: 0.1rem 0.5rem;
            border-radius: 4px;
        }
        .vidyari-notification-tab.active .vidyari-tab-count {
            background-color: var(--color-bg);
            color: var(--color-black);
        }
        
        /* --- Notification List --- */
        .vidyari-notification-lists-wrapper {
            overflow-y: auto;
            flex-grow: 1;
            max-height: 600px;
        }
        .vidyari-notification-list { list-style: none; }
        
        .vidyari-notification-item {
            display: flex;
            gap: 1rem;
            padding: 1.25rem 1.5rem;
            border-bottom: 2px solid #ddd;
            transition: background-color 0.2s ease-in-out;
            position: relative;
        }
        .vidyari-notification-item-link { text-decoration: none; display: contents; }
        .vidyari-notification-list:last-child .vidyari-notification-item:last-child { border-bottom: none; }
        .vidyari-notification-item:hover { background-color: #f0f0f0; }

        .vidyari-notification-item.unread {
            background-color: #fffbe6; /* Light yellow for unread */
            font-weight: 700;
        }
        .vidyari-notification-item.unread:hover {
            background-color: #fff8d4;
        }

        /* --- Notification Icons --- */
        .vidyari-notification-icon {
            width: 40px; height: 40px; border-radius: 50%;
            flex-shrink: 0; display: flex; align-items: center;
            justify-content: center; font-size: 1rem;
            border: 3px solid var(--color-black);
        }
        .vidyari-icon-system { background-color: var(--color-focus); color: var(--color-black); }
        .vidyari-icon-purchase { background-color: var(--color-secondary); color: var(--color-black); }
        .vidyari-icon-report { background-color: var(--color-primary); color: var(--color-black); }
        .vidyari-icon-comment { background-color: var(--color-accent); color: var(--color-black); }
        .vidyari-icon-follow { background-color: #c4b5fd; color: var(--color-black); }

        /* --- Notification Content --- */
        .vidyari-notification-content { flex-grow: 1; }
        .vidyari-notification-text {
            font-size: 0.95rem; line-height: 1.5; color: #333;
        }
        .vidyari-notification-text strong {
            font-weight: 900; color: var(--color-black);
        }
        .vidyari-notification-item.unread .vidyari-notification-text {
            color: var(--color-black);
        }
        .vidyari-notification-timestamp {
            font-size: 0.8rem; color: #666;
            margin-top: 0.25rem; display: block;
        }
        .vidyari-unread-dot {
            width: 12px; height: 12px; background-color: var(--color-primary);
            border: 2px solid var(--color-black);
            position: absolute; top: 1.25rem; right: 1.5rem;
        }

        /* --- Empty State --- */
        .vidyari-empty-state {
            padding: 4rem 2rem; text-align: center;
        }
        .vidyari-empty-state i {
            font-size: 3rem; margin-bottom: 1rem;
            color: var(--color-black);
        }
        .vidyari-empty-state p {
            font-size: 1.25rem; font-weight: 700;
            color: var(--color-black);
        }
    </style>
</head>

<body class="vidyari-notifications-body">
    <div class="vidyari-notifications-container">
        <header class="vidyari-notifications-header">
            <h1 class="vidyari-notifications-title">Notifications</h1>
        </header>

        <div class="vidyari-notification-tabs">
            <button class="vidyari-notification-tab active" data-tab="all">All <span class="vidyari-tab-count" id="vidyari-count-all">0</span></button>
            <button class="vidyari-notification-tab" data-tab="comment">Comments <span class="vidyari-tab-count" id="vidyari-count-comment">0</span></button>
            <button class="vidyari-notification-tab" data-tab="purchase">Purchases <span class="vidyari-tab-count" id="vidyari-count-purchase">0</span></button>
            <button class="vidyari-notification-tab" data-tab="report">Reports <span class="vidyari-tab-count" id="vidyari-count-report">0</span></button>
            <button class="vidyari-notification-tab" data-tab="system">System <span class="vidyari-tab-count" id="vidyari-count-system">0</span></button>
        </div>

        <div class="vidyari-notification-lists-wrapper">
            <% const renderNotification = (notification) => { %>
            <li class="vidyari-notification-item <%= !notification.isRead ? 'unread' : '' %>" data-type="<%= notification.type %>" data-id="<%= notification._id %>">
                <a href="<%= notification.link || '#' %>" class="vidyari-notification-item-link">
                    <div class="vidyari-notification-icon vidyari-icon-<%= notification.type %>">
                        <% if (notification.type === 'system') { %> <i class="fas fa-bell"></i> <% } %>
                        <% if (notification.type === 'purchase') { %> <i class="fas fa-shopping-cart"></i> <% } %>
                        <% if (notification.type === 'report') { %> <i class="fas fa-flag"></i> <% } %>
                        <% if (notification.type === 'comment') { %> <i class="fas fa-comment"></i> <% } %>
                        <% if (notification.type === 'follow') { %> <i class="fas fa-user-plus"></i> <% } %>
                    </div>
                    <div class="vidyari-notification-content">
                        <p class="vidyari-notification-text"><%- notification.message %></p>
                        <span class="vidyari-notification-timestamp" data-timestamp="<%= notification.createdAt %>"></span>
                    </div>
                    <% if (!notification.isRead) { %>
                    <div class="vidyari-unread-dot"></div>
                    <% } %>
                </a>
            </li>
            <% }; %>

            <ul class="vidyari-notification-list">
                <% if (notifications && notifications.length > 0) { %>
                    <% notifications.forEach(renderNotification) %>
                <% } else { %>
                    <li class="vidyari-empty-state">
                        <i class="fas fa-check-circle"></i>
                        <p>All caught up!</p>
                    </li>
                <% } %>
            </ul>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('.vidyari-notification-tab');
            const allNotifications = document.querySelectorAll('.vidyari-notification-item');
            const emptyState = document.querySelector('.vidyari-empty-state');

            const counts = { all: 0, comment: 0, purchase: 0, system: 0, report: 0, follow: 0 };
            
            allNotifications.forEach(item => {
                if(item.dataset.type) {
                    counts.all++;
                    const type = item.getAttribute('data-type');
                    if (counts.hasOwnProperty(type)) {
                        counts[type]++;
                    }
                }
            });

            document.getElementById('vidyari-count-all').textContent = counts.all;
            document.getElementById('vidyari-count-comment').textContent = counts.comment;
            document.getElementById('vidyari-count-purchase').textContent = counts.purchase;
            document.getElementById('vidyari-count-system').textContent = counts.system;
            document.getElementById('vidyari-count-report').textContent = counts.report;

            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('active'));
                    tab.classList.add('active');
                    const tabType = tab.getAttribute('data-tab');
                    let hasVisibleItems = false;
                    allNotifications.forEach(item => {
                        const itemIsVisible = (tabType === 'all' || item.getAttribute('data-type') === tabType);
                        item.style.display = itemIsVisible ? 'flex' : 'none';
                        if (itemIsVisible) {
                            hasVisibleItems = true;
                        }
                    });
                    if (emptyState) {
                       emptyState.style.display = hasVisibleItems ? 'none' : 'block';
                    }
                });
            });

            const timeAgo = (date) => {
                const seconds = Math.floor((new Date() - new Date(date)) / 1000);
                if (seconds < 60) return "just now";
                const intervals = { year: 31536000, month: 2592000, day: 86400, hour: 3600, minute: 60 };
                for (const [unit, secondsInUnit] of Object.entries(intervals)) {
                    const interval = Math.floor(seconds / secondsInUnit);
                    if (interval >= 1) return `${interval} ${unit}${interval > 1 ? 's' : ''} ago`;
                }
                return "just now";
            };
            document.querySelectorAll('.vidyari-notification-timestamp').forEach(el => {
                const timestamp = el.getAttribute('data-timestamp');
                if (timestamp) el.textContent = timeAgo(timestamp);
            });
            
            document.querySelector('.vidyari-notification-list').addEventListener('click', (event) => {
                const notificationItem = event.target.closest('.vidyari-notification-item.unread');
                if (!notificationItem) return;

                const notificationId = notificationItem.dataset.id;
                
                notificationItem.classList.remove('unread');
                const unreadDot = notificationItem.querySelector('.vidyari-unread-dot');
                if (unreadDot) unreadDot.remove();

                fetch(`/notifications/${notificationId}/mark-as-read`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                })
                .then(response => {
                    if (!response.ok) {
                        console.error('Failed to mark notification as read on the server.');
                        notificationItem.classList.add('unread'); 
                    }
                })
                .catch(error => {
                    console.error('Network error:', error);
                    notificationItem.classList.add('unread');
                });
            });
        });
    </script>
</body>
</html>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3321203820490717"
     crossorigin="anonymous"></script>
<%-include("footer")%>